{
    "lineChartJsCode" : "import { Component } from '@angular\/core'\r\nimport { ThemeConstantService } from '..\/..\/shared\/services\/theme-constant.service';\r\n\r\n@Component({\r\n    template: `\r\n        <canvas ngChartjs \r\n            [datasets]=\"lineChartData\" \r\n            [labels]=\"lineChartLabels\"\r\n            [options]=\"lineChartOptions\" \r\n            [colors]=\"lineChartColors\" \r\n            [legend]=\"lineChartLegend\"\r\n            [chartType]=\"lineChartType\">\r\n        <\/canvas>\r\n    `\r\n})\r\n\r\nexport class LineChartJsExampleComponent {\r\n\r\n    \/\/ lineChart\r\n    lineChartData: Array<any> = [\r\n        { data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A' },\r\n        { data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B' }\r\n    ];\r\n    currentLineChartLabelsIdx = 1;\r\n    lineChartLabels:Array<any> = [\"16th\", \"17th\", \"18th\", \"19th\", \"20th\", \"21th\", \"22th\"];\r\n    lineChartOptions: any = {\r\n        responsive: true,\r\n        hover: {\r\n            mode: 'nearest',\r\n            intersect: true\r\n        },\r\n        tooltips: {\r\n            mode: 'index'\r\n        },\r\n        scales: {\r\n            xAxes: [{ \r\n                gridLines: [{\r\n                    display: false,\r\n                }],\r\n                ticks: {\r\n                    display: true,\r\n                    fontColor: this.themeColors.grayLight,\r\n                    fontSize: 13,\r\n                    padding: 10\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                gridLines: {\r\n                    drawBorder: false,\r\n                    drawTicks: false,\r\n                    borderDash: [3, 4],\r\n                    zeroLineWidth: 1,\r\n                    zeroLineBorderDash: [3, 4]  \r\n                },\r\n                ticks: {\r\n                    display: true,\r\n                    max: 100,                            \r\n                    stepSize: 20,\r\n                    fontColor: this.themeColors.grayLight,\r\n                    fontSize: 13,\r\n                    padding: 10\r\n                }  \r\n            }],\r\n        }\r\n    };\r\n    lineChartColors: Array<any> = [\r\n        { \r\n            backgroundColor: this.themeColors.transparent,\r\n            borderColor: this.themeColors.blue,\r\n            pointBackgroundColor: this.themeColors.blue,\r\n            pointBorderColor: this.themeColors.white,\r\n            pointHoverBackgroundColor: this.themeColors.blueLight,\r\n            pointHoverBorderColor: this.themeColors.blueLight\r\n        },\r\n        { \r\n            backgroundColor: this.themeColors.transparent,\r\n            borderColor: this.themeColors.cyan,\r\n            pointBackgroundColor: this.themeColors.cyan,\r\n            pointBorderColor: this.themeColors.white,\r\n            pointHoverBackgroundColor: this.themeColors.cyanLight,\r\n            pointHoverBorderColor: this.themeColors.cyanLight\r\n        }\r\n    ];\r\n    lineChartLegend = true;\r\n    lineChartType = 'line';\r\n}    ",
    "stackAreaChartJsCode" : "import { Component } from '@angular\/core'\r\nimport { ThemeConstantService } from '..\/..\/shared\/services\/theme-constant.service';\r\n\r\n@Component({\r\n    template: `\r\n        <canvas ngChartjs \r\n            [datasets]=\"stackedAreaChartData\" \r\n            [labels]=\"stackedAreaChartLabels\"\r\n            [options]=\"stackedAreaChartOptions\" \r\n            [colors]=\"stackedAreaChartColors\" \r\n            [legend]=\"stackedAreaChartLegend\"\r\n            [chartType]=\"stackedAreaChartType\">\r\n        <\/canvas>\r\n    `\r\n})\r\n\r\nexport class StackedAreaChartJsExampleComponent {\r\n\r\n    \/\/Stacked Area Chart\r\n    stackedAreaChartData: Array<any> = [\r\n        { data: [28, 48, 40, 55, 86, 55, 90]}\r\n    ];\r\n    currentstackedAreaChartLabelsIdx = 2;\r\n    stackedAreaChartLabels:Array<any> = [\"16th\", \"17th\", \"18th\", \"19th\", \"20th\", \"21th\", \"22th\"];\r\n    stackedAreaChartOptions: any = {\r\n        responsive: true,\r\n        hover: {\r\n            mode: 'nearest',\r\n            intersect: true\r\n        },\r\n        elements: {\r\n            line: {\r\n                tension: 0.5\r\n            },\r\n            point: { \r\n                radius: 0 \r\n            }\r\n        },\r\n        scales: {\r\n            xAxes: [{ \r\n                gridLines: [{\r\n                    display: false,\r\n                }],\r\n                ticks: {\r\n                    fontColor: this.themeColors.grayLight,\r\n                    display: true,\r\n                    beginAtZero: true,\r\n                    fontSize: 13,\r\n                    padding: 10\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                gridLines: {\r\n                    drawBorder: false,\r\n                    drawTicks: false,\r\n                    borderDash: [3, 4],\r\n                    zeroLineWidth: 1,\r\n                    zeroLineBorderDash: [3, 4],\r\n                    scaleLabel: {\r\n                        display: false,\r\n                        labelString: 'Value'\r\n                    }    \r\n                },\r\n                ticks: {\r\n                    max: 100,                            \r\n                    stepSize: 20,\r\n                    display: true,\r\n                    beginAtZero: true,\r\n                    fontColor: this.themeColors.grayLight,\r\n                    fontSize: 13,\r\n                    padding: 10\r\n                }\r\n            }],\r\n        }\r\n    };\r\n    stackedAreaChartColors: Array<any> = [\r\n        { \r\n            backgroundColor: this.themeColors.blueLight,\r\n            borderColor: this.themeColors.blue,\r\n            pointBackgroundColor: this.themeColors.blue,\r\n            pointBorderColor: this.themeColors.white,\r\n            pointHoverBackgroundColor: this.themeColors.blueLight,\r\n            pointHoverBorderColor: this.themeColors.blueLight\r\n        }\r\n    ];\r\n    stackedAreaChartLegend = true;\r\n    stackedAreaChartType = 'line';\r\n}    \r\n\r\n",
    "barChartJsCode" : "import { Component } from '@angular\/core'\r\nimport { ThemeConstantService } from '..\/..\/shared\/services\/theme-constant.service';\r\n\r\n@Component({\r\n    template: `\r\n        <canvas ngChartjs \r\n            [datasets]=\"barChartData\" \r\n            [labels]=\"barChartLabels\"\r\n            [options]=\"barChartOptions\" \r\n            [colors]=\"barChartColors\"\r\n            [legend]=\"barChartLegend\" \r\n            [chartType]=\"barChartType\">\r\n        <\/canvas>\r\n    `\r\n})\r\n\r\nexport class barChartJsExampleComponent {\r\n    \/\/Bar Chart\r\n    barChartOptions: any = {\r\n        scaleShowVerticalLines: false,\r\n        responsive: true,\r\n        scales: {\r\n            xAxes: [{\r\n                categoryPercentage: 0.45,\r\n                barPercentage: 0.70,\r\n                display: true,\r\n                scaleLabel: {\r\n                    display: false,\r\n                    labelString: 'Month'\r\n                },\r\n                gridLines: false,\r\n                ticks: {\r\n                    display: true,\r\n                    beginAtZero: true,\r\n                    fontSize: 13,\r\n                    padding: 10\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                categoryPercentage: 0.35,\r\n                barPercentage: 0.70,\r\n                display: true,\r\n                scaleLabel: {\r\n                    display: false,\r\n                    labelString: 'Value'\r\n                },\r\n                gridLines: {\r\n                    drawBorder: false,\r\n                    offsetGridLines: false,\r\n                    drawTicks: false,\r\n                    borderDash: [3, 4],\r\n                    zeroLineWidth: 1,\r\n                    zeroLineBorderDash: [3, 4]\r\n                },\r\n                ticks: {\r\n                    max: 100,                            \r\n                    stepSize: 20,\r\n                    display: true,\r\n                    beginAtZero: true,\r\n                    fontSize: 13,\r\n                    padding: 10\r\n                }\r\n            }]\r\n        }\r\n    };\r\n    barChartLabels: string[] = ['2006', '2007', '2008', '2009', '2010', '2011',];\r\n    barChartType = 'bar';\r\n    barChartLegend = true;\r\n    barChartColors: Array<any> = [\r\n        { \r\n            backgroundColor: this.themeColors.blue,\r\n            borderWidth: 0\r\n        },\r\n        { \r\n            backgroundColor: this.themeColors.blueLight,\r\n            borderWidth: 0\r\n        }\r\n    ];\r\n    barChartData: any[] = [\r\n        { \r\n            data: [65, 59, 80, 81, 56, 55],\r\n            label: 'Series A'\r\n        },\r\n        { \r\n            data: [28, 48, 40, 19, 86, 27],\r\n            label: 'Series B'\r\n        }\r\n    ];\r\n}    ",
    "radarChartJsCode" : "import { Component } from '@angular\/core'\r\nimport { ThemeConstantService } from '..\/..\/shared\/services\/theme-constant.service';\r\n\r\n@Component({\r\n    template: `\r\n        <canvas ngChartjs \r\n            [datasets]=\"radarChartData\" \r\n            [labels]=\"radarChartLabels\"\r\n            [options]=\"radarChartOptions\" \r\n            [colors]=\"radarChartColors\" \r\n            [chartType]=\"radarChartType\">\r\n        <\/canvas>\r\n    `\r\n})\r\n\r\nexport class radarChartJsExampleComponent {\r\n   \r\n    \/\/Radar Chart\r\n    radarChartLabels: string[] = ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'];\r\n    radarChartOptions: any = {\r\n        responsive: true,\r\n        scale: {\r\n            ticks: {\r\n                max: 100,                            \r\n                stepSize: 25,\r\n            },\r\n            gridLines: {\r\n                color: this.themeColors.border\r\n            },  \r\n            angleLines: {\r\n                color: this.themeColors.border\r\n            }   \r\n        } \r\n    }  \r\n    radarChartColors: Array<any> = [\r\n        { \r\n            backgroundColor: this.themeColors.blueLight,\r\n            borderWidth: 2,\r\n            borderColor: this.themeColors.blue\r\n        },\r\n        { \r\n            backgroundColor: this.themeColors.cyanLight,\r\n            borderWidth: 2,\r\n            borderColor: this.themeColors.cyan\r\n        }\r\n    ];\r\n    radarChartData: any = [\r\n        { data: [65, 59, 90, 81, 56, 55, 40], label: 'Series A' },\r\n        { data: [28, 48, 40, 19, 96, 27, 100], label: 'Series B' }\r\n    ];\r\n    radarChartType = 'radar';\r\n}    \r\n\r\n",
    "doughnutChartJsCode" : "import { Component } from '@angular\/core'\r\nimport { ThemeConstantService } from '..\/..\/shared\/services\/theme-constant.service';\r\n\r\n@Component({\r\n    template: `\r\n        <canvas ngChartjs \r\n            [data]=\"doughnutChartData\" \r\n            [labels]=\"doughnutChartLabels\" \r\n            [chartType]=\"doughnutChartType\"\r\n            [colors]=\"doughnutChartColors\">\r\n        <\/canvas>\r\n    `\r\n})\r\n\r\nexport class doughnutChartJsExampleComponent {\r\n   \r\n    \/\/ Doughnut Chart\r\n    doughnutChartLabels: string[] = ['Download Sales', 'In-Store Sales', 'Mail Sales'];\r\n    doughnutChartData: number[] = [350, 450, 100];\r\n    doughnutChartColors: Array<any> =  [{ \r\n        backgroundColor: [this.themeColors.blue, this.themeColors.gold, this.themeColors.cyan],\r\n        pointBackgroundColor : [this.themeColors.blue, this.themeColors.gold, this.themeColors.cyan]\r\n    }];\r\n    doughnutChartType = 'doughnut';\r\n}    \r\n\r\n",
    "polarChartJsCode" : "import { Component } from '@angular\/core'\r\nimport { ThemeConstantService } from '..\/..\/shared\/services\/theme-constant.service';\r\n\r\n@Component({\r\n    template: `\r\n        <canvas ngChartjs \r\n            [data]=\"polarAreaChartData\" \r\n            [labels]=\"polarAreaChartLabels\"\r\n            [legend]=\"polarAreaLegend\" \r\n            [options]=\"polarAreaChartOptions\"\r\n            [colors]=\"polarAreaChartColors\"\r\n            [chartType]=\"polarAreaChartType\">\r\n        <\/canvas>\r\n    `\r\n})\r\n\r\nexport class PolarAreaChartJsExampleComponent {\r\n   \r\n    \/\/ PolarArea Chart\r\n    polarAreaChartLabels: string[] = ['Download Sales', 'In-Store Sales', 'Mail Sales', 'Telesales', 'Corporate Sales'];\r\n    polarAreaChartData: number[] = [300, 500, 100, 40, 120];\r\n    polarAreaLegend = true;\r\n    polarAreaChartOptions: any = {\r\n        responsive: true,\r\n        scale: {\r\n            ticks: {\r\n                max: 500,                            \r\n                stepSize: 100,\r\n            },\r\n            gridLines: {\r\n                color: this.themeColors.border\r\n            },  \r\n            angleLines: {\r\n                color: this.themeColors.border\r\n            }   \r\n        } \r\n    };\r\n\r\n    polarAreaChartColors: Array<any> = [{ \r\n        backgroundColor: [\r\n            this.themeColors.blueLight,\r\n            this.themeColors.cyanLight, \r\n            this.themeColors.goldLight,\r\n            this.themeColors.purpleLight,\r\n            this.themeColors.redLight,\r\n        ],\r\n        borderColor : [\r\n            this.themeColors.blue, \r\n            this.themeColors.cyan, \r\n            this.themeColors.gold,\r\n            this.themeColors.purple,\r\n            this.themeColors.red,\r\n        ]\r\n    }];\r\n    polarAreaChartType = 'polarArea'\r\n}    \r\n\r\n",
    "chartJsAPICode": "themeColors = this.colorConfig.get().colors;\r\n\r\nconstructor( private colorConfig:ThemeConstantService ) {\r\n    console.log(this.themeColors.magenta)\r\n    \/\/Output: #eb2f96\r\n}"
}