{
    "tableBasicCode" : "import { Component } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-table-basic',\r\n    template: `\r\n        <nz-table #basicTable [nzData]=\"dataSet\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Name<\/th>\r\n                    <th>Age<\/th>\r\n                    <th>Address<\/th>\r\n                    <th>Action<\/th>\r\n                <\/tr>\r\n            <\/thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data\">\r\n                    <td>{{data.name}}<\/td>\r\n                    <td>{{data.age}}<\/td>\r\n                    <td>{{data.address}}<\/td>\r\n                    <td>\r\n                        <a>Action \u4E00 {{data.name}}<\/a>\r\n                        <nz-divider nzType=\"vertical\"><\/nz-divider>\r\n                        <a>Delete<\/a>\r\n                    <\/td>\r\n                <\/tr>\r\n            <\/tbody>\r\n        <\/nz-table>\r\n    `\r\n})\r\nexport class NzDemoTableBasicComponent {\r\n    dataSet = [\r\n        {\r\n            key    : '1',\r\n            name   : 'John Brown',\r\n            age    : 32,\r\n            address: 'New York No. 1 Lake Park'\r\n        },\r\n        {\r\n            key    : '2',\r\n            name   : 'Jim Green',\r\n            age    : 42,\r\n            address: 'London No. 1 Lake Park'\r\n        },\r\n        {\r\n            key    : '3',\r\n            name   : 'Joe Black',\r\n            age    : 32,\r\n            address: 'Sidney No. 1 Lake Park'\r\n        }\r\n    ];\r\n}",
    "tableSelectionCode" : "import { Component } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-table-row-selection',\r\n    template: `\r\n        <nz-table\r\n            #rowSelectionTable\r\n            [nzData]=\"data\"\r\n            (nzCurrentPageDataChange)=\"currentPageDataChange($event)\"\r\n            (nzPageIndexChange)=\"refreshStatus()\"\r\n            (nzPageSizeChange)=\"refreshStatus()\">\r\n            <thead>\r\n                <tr>\r\n                    <th nzShowCheckbox [(nzChecked)]=\"allChecked\" [nzIndeterminate]=\"indeterminate\" (nzCheckedChange)=\"checkAll($event)\"><\/th>\r\n                    <th>Name<\/th>\r\n                    <th>Age<\/th>\r\n                    <th>Address<\/th>\r\n                <\/tr>\r\n            <\/thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of rowSelectionTable.data\">\r\n                    <td nzShowCheckbox [(nzChecked)]=\"data.checked\" [nzDisabled]=\"data.disabled\" (nzCheckedChange)=\"refreshStatus()\"><\/td>\r\n                    <td>{{data.name}}<\/td>\r\n                    <td>{{data.age}}<\/td>\r\n                    <td>{{data.address}}<\/td>\r\n                <\/tr>\r\n            <\/tbody>\r\n        <\/nz-table>`\r\n})\r\nexport class NzDemoTableRowSelectionComponent {\r\n    allChecked = false;\r\n    indeterminate = false;\r\n    displayData = [];\r\n    data = [\r\n        {\r\n            name    : 'John Brown',\r\n            age     : 32,\r\n            address : 'New York No. 1 Lake Park',\r\n            checked : false,\r\n            disabled: false\r\n        },\r\n        {\r\n            name    : 'Jim Green',\r\n            age     : 42,\r\n            address : 'London No. 1 Lake Park',\r\n            checked : false,\r\n            disabled: false\r\n        },\r\n        {\r\n            name    : 'Joe Black',\r\n            age     : 32,\r\n            address : 'Sidney No. 1 Lake Park',\r\n            checked : false,\r\n            disabled: false\r\n        },\r\n        {\r\n            name    : 'Disabled User',\r\n            age     : 32,\r\n            address : 'Sidney No. 1 Lake Park',\r\n            checked : false,\r\n            disabled: true\r\n        }\r\n    ];\r\n\r\n    currentPageDataChange($event: Array<{ name: string; age: number; address: string; checked: boolean; disabled: boolean; }>): void {\r\n        this.displayData = $event;\r\n        this.refreshStatus();\r\n    }\r\n\r\n    refreshStatus(): void {\r\n        const allChecked = this.displayData.filter(value => !value.disabled).every(value => value.checked === true);\r\n        const allUnChecked = this.displayData.filter(value => !value.disabled).every(value => !value.checked);\r\n        this.allChecked = allChecked;\r\n        this.indeterminate = (!allChecked) && (!allUnChecked);\r\n    }\r\n\r\n    checkAll(value: boolean): void {\r\n        this.displayData.forEach(data => {\r\n            if (!data.disabled) {\r\n                data.checked = value;\r\n            }\r\n        });\r\n        this.refreshStatus();\r\n    }\r\n}",
    "tableOperationCode" : "import { Component, OnInit } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-table-row-selection-and-operation',\r\n    template: `\r\n        <div class=\"m-b-15\">\r\n            <button nz-button [disabled]=\"disabledButton\" [nzType]=\"'primary'\" [nzLoading]=\"operating\" (click)=\"operateData()\">\r\n            Reload\r\n            <\/button>\r\n            <span class=\"m-l-10\" *ngIf=\"checkedNumber\">Selected {{checkedNumber}} items<\/span>\r\n        <\/div>\r\n        <nz-table\r\n            #rowSelectionTable\r\n            [nzData]=\"dataSet\"\r\n            (nzCurrentPageDataChange)=\"currentPageDataChange($event)\"\r\n            (nzPageIndexChange)=\"refreshStatus()\"\r\n            (nzPageSizeChange)=\"refreshStatus()\">\r\n            <thead>\r\n                <tr>\r\n                    <th nzShowCheckbox [(nzChecked)]=\"allChecked\" [nzIndeterminate]=\"indeterminate\" (nzCheckedChange)=\"checkAll($event)\"><\/th>\r\n                    <th>Name<\/th>\r\n                    <th>Age<\/th>\r\n                    <th>Address<\/th>\r\n                <\/tr>\r\n            <\/thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of rowSelectionTable.data\">\r\n                    <td nzShowCheckbox [(nzChecked)]=\"data.checked\" (nzCheckedChange)=\"refreshStatus()\"><\/td>\r\n                    <td>{{data.name}}<\/td>\r\n                    <td>{{data.age}}<\/td>\r\n                    <td>{{data.address}}<\/td>\r\n                <\/tr>\r\n            <\/tbody>\r\n        <\/nz-table>`,\r\n})\r\nexport class NzDemoTableRowSelectionAndOperationComponent implements OnInit {\r\n    allChecked = false;\r\n    disabledButton = true;\r\n    checkedNumber = 0;\r\n    displayData: Array<{ name: string; age: number; address: string; checked: boolean }> = [];\r\n    operating = false;\r\n    dataSet = [];\r\n    indeterminate = false;\r\n\r\n    currentPageDataChange($event: Array<{ name: string; age: number; address: string; checked: boolean }>): void {\r\n        this.displayData = $event;\r\n    }\r\n\r\n    refreshStatus(): void {\r\n        const allChecked = this.displayData.every(value => value.checked === true);\r\n        const allUnChecked = this.displayData.every(value => !value.checked);\r\n        this.allChecked = allChecked;\r\n        this.indeterminate = (!allChecked) && (!allUnChecked);\r\n        this.disabledButton = !this.dataSet.some(value => value.checked);\r\n        this.checkedNumber = this.dataSet.filter(value => value.checked).length;\r\n    }\r\n\r\n    checkAll(value: boolean): void {\r\n        this.displayData.forEach(data => data.checked = value);\r\n        this.refreshStatus();\r\n    }\r\n\r\n    operateData(): void {\r\n        this.operating = true;\r\n        setTimeout(_ => {\r\n            this.dataSet.forEach(value => value.checked = false);\r\n            this.refreshStatus();\r\n            this.operating = false;\r\n        }, 1000);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        for (let i = 0; i < 46; i++) {\r\n            this.dataSet.push({\r\n                name   : `Edward King ${i}`,\r\n                age    : 32,\r\n                address: `London, Park Lane no. ${i}`,\r\n                checked: false\r\n            });\r\n        }\r\n    }\r\n}",
    "tableCustomSelectionCode" : "import { Component, OnInit } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-table-row-selection-custom',\r\n    template: `\r\n        <nz-table\r\n            #rowSelectionTable\r\n            [nzData]=\"dataSet\"\r\n            [nzPageSize]=\"10\"\r\n            (nzPageIndexChange)=\"refreshStatus()\"\r\n            (nzPageSizeChange)=\"refreshStatus()\">\r\n            <thead>\r\n                <tr>\r\n                    <th nzShowCheckbox nzShowRowSelection [nzSelections]=\"listOfSelection\" [(nzChecked)]=\"allChecked\" [nzIndeterminate]=\"indeterminate\" (nzCheckedChange)=\"checkAll($event)\"><\/th>\r\n                    <th>Name<\/th>\r\n                    <th>Age<\/th>\r\n                    <th>Address<\/th>\r\n                <\/tr>\r\n            <\/thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of rowSelectionTable.data\">\r\n                    <td nzShowCheckbox [(nzChecked)]=\"data.checked\" (nzCheckedChange)=\"refreshStatus()\"><\/td>\r\n                    <td>{{data.name}}<\/td>\r\n                    <td>{{data.age}}<\/td>\r\n                    <td>{{data.address}}<\/td>\r\n                <\/tr>\r\n            <\/tbody>\r\n        <\/nz-table>`\r\n})\r\nexport class NzDemoTableRowSelectionCustomComponent implements OnInit {\r\n    listOfSelection = [\r\n        {\r\n            text    : 'Select All Row',\r\n            onSelect: () => {\r\n            this.checkAll(true);\r\n            }\r\n        },\r\n        {\r\n            text    : 'Select Odd Row',\r\n            onSelect: () => {\r\n            this.dataSet.forEach((data, index) => data.checked = index % 2 !== 0);\r\n            this.refreshStatus();\r\n            }\r\n        },\r\n        {\r\n            text    : 'Select Even Row',\r\n            onSelect: () => {\r\n            this.dataSet.forEach((data, index) => data.checked = index % 2 === 0);\r\n            this.refreshStatus();\r\n            }\r\n        }\r\n    ];\r\n    allChecked = false;\r\n    dataSet: Array<{ name: string; age: number; address: string; checked: boolean }> = [];\r\n    indeterminate = false;\r\n\r\n    refreshStatus(): void {\r\n        const allChecked = this.dataSet.every(value => value.checked === true);\r\n        const allUnChecked = this.dataSet.every(value => !value.checked);\r\n        this.allChecked = allChecked;\r\n        this.indeterminate = (!allChecked) && (!allUnChecked);\r\n    }\r\n\r\n    checkAll(value: boolean): void {\r\n        this.dataSet.forEach(data => data.checked = value);\r\n        this.refreshStatus();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        for (let i = 0; i < 46; i++) {\r\n            this.dataSet.push({\r\n                name   : `Edward King ${i}`,\r\n                age    : 32,\r\n                address: `London, Park Lane no. ${i}`,\r\n                checked: false\r\n            });\r\n        }\r\n    }\r\n}",
    "tableDefaultFilterCode" : "import { Component } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-table-default-filter',\r\n    template: `\r\n        <nz-table #filterTable [nzData]=\"displayData\">\r\n            <thead (nzSortChange)=\"sort($event)\" nzSingleSort>\r\n                <tr>\r\n                    <th nzShowSort nzSortKey=\"name\" nzShowFilter [nzFilters]=\"nameList\" (nzFilterChange)=\"filter($event,searchAddress)\">Name<\/th>\r\n                    <th nzShowSort nzSortKey=\"age\">Age<\/th>\r\n                    <th nzShowSort nzSortKey=\"address\" nzShowFilter [nzFilterMultiple]=\"false\" [nzFilters]=\"addressList\" (nzFilterChange)=\"filter(listOfSearchName,$event)\">Address<\/th>\r\n                <\/tr>\r\n            <\/thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of filterTable.data\">\r\n                    <td>{{data.name}}<\/td>\r\n                    <td>{{data.age}}<\/td>\r\n                    <td>{{data.address}}<\/td>\r\n                <\/tr>\r\n            <\/tbody>\r\n        <\/nz-table>`\r\n})\r\nexport class NzDemoTableDefaultFilterComponent {\r\n    nameList = [\r\n        { text: 'Joe', value: 'Joe', byDefault: true },\r\n        { text: 'Jim', value: 'Jim' }\r\n    ];\r\n    addressList = [\r\n        { text: 'London', value: 'London', byDefault: true },\r\n        { text: 'Sidney', value: 'Sidney' }\r\n    ];\r\n    sortName = null;\r\n    sortValue = null;\r\n    listOfSearchName = [ 'Joe', 'London' ];  \/\/ You need to change it as well!\r\n    searchAddress: string;\r\n    data = [\r\n        {\r\n            name: 'John Brown',\r\n            age: 32,\r\n            address: 'New York No. 1 Lake Park'\r\n        },\r\n        {\r\n            name: 'Jim Green',\r\n            age: 42,\r\n            address: 'London No. 1 Lake Park'\r\n        },\r\n        {\r\n            name: 'Joe Black',\r\n            age: 32,\r\n            address: 'Sidney No. 1 Lake Park'\r\n        },\r\n        {\r\n            name: 'Jim Red',\r\n            age: 32,\r\n            address: 'London No. 2 Lake Park'\r\n        }\r\n    ];\r\n    displayData = [ ]; \/\/ You need to change it as well!\r\n\r\n    sort(sort: { key: string, value: string }): void {\r\n        this.sortName = sort.key;\r\n        this.sortValue = sort.value;\r\n        this.search();\r\n    }\r\n\r\n    filter(listOfSearchName: string[], searchAddress: string): void {\r\n        this.listOfSearchName = listOfSearchName;\r\n        this.searchAddress = searchAddress;\r\n        this.search();\r\n    }\r\n\r\n    search(): void {\r\n        \/** filter data **\/\r\n        const filterFunc = item => (this.searchAddress ? item.address.indexOf(this.searchAddress) !== -1 : true) && (this.listOfSearchName.length ? this.listOfSearchName.some(name => item.name.indexOf(name) !== -1) : true);\r\n        const data = this.data.filter(item => filterFunc(item));\r\n        \/** sort data **\/\r\n        if (this.sortName && this.sortValue) {\r\n            this.displayData = data.sort((a, b) => (this.sortValue === 'ascend') ? (a[ this.sortName ] > b[ this.sortName ] ? 1 : -1) : (b[ this.sortName ] > a[ this.sortName ] ? 1 : -1));\r\n        } else {\r\n            this.displayData = data;\r\n        }\r\n    }\r\n}",
    "tableFilterCode" : "import { Component } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-table-head',\r\n    template: `\r\n        <nz-table #filterTable [nzData]=\"displayData\">\r\n            <thead (nzSortChange)=\"sort($event)\" nzSingleSort>\r\n            <tr>\r\n                <th nzShowSort nzSortKey=\"name\" nzShowFilter [nzFilters]=\"nameList\" (nzFilterChange)=\"filter($event,searchAddress)\">Name<\/th>\r\n                <th nzShowSort nzSortKey=\"age\">Age<\/th>\r\n                <th nzShowSort nzSortKey=\"address\" nzShowFilter [nzFilterMultiple]=\"false\" [nzFilters]=\"addressList\" (nzFilterChange)=\"filter(listOfSearchName,$event)\">Address<\/th>\r\n            <\/tr>\r\n            <\/thead>\r\n            <tbody>\r\n            <tr *ngFor=\"let data of filterTable.data\">\r\n                <td>{{data.name}}<\/td>\r\n                <td>{{data.age}}<\/td>\r\n                <td>{{data.address}}<\/td>\r\n            <\/tr>\r\n            <\/tbody>\r\n        <\/nz-table>`\r\n})\r\nexport class NzDemoTableHeadComponent {\r\n    nameList = [\r\n        { text: 'Joe', value: 'Joe' },\r\n        { text: 'Jim', value: 'Jim' }\r\n    ];\r\n    addressList = [\r\n        { text: 'London', value: 'London' },\r\n        { text: 'Sidney', value: 'Sidney' }\r\n    ];\r\n    sortName = null;\r\n    sortValue = null;\r\n    listOfSearchName = [];\r\n    searchAddress: string;\r\n    data = [\r\n        {\r\n            name   : 'John Brown',\r\n            age    : 32,\r\n            address: 'New York No. 1 Lake Park'\r\n        },\r\n        {\r\n            name   : 'Jim Green',\r\n            age    : 42,\r\n            address: 'London No. 1 Lake Park'\r\n        },\r\n        {\r\n            name   : 'Joe Black',\r\n            age    : 32,\r\n            address: 'Sidney No. 1 Lake Park'\r\n        },\r\n        {\r\n            name   : 'Jim Red',\r\n            age    : 32,\r\n            address: 'London No. 2 Lake Park'\r\n        }\r\n    ];\r\n    displayData = [ ...this.data ];\r\n\r\n    sort(sort: { key: string, value: string }): void {\r\n        this.sortName = sort.key;\r\n        this.sortValue = sort.value;\r\n        this.search();\r\n    }\r\n\r\n    filter(listOfSearchName: string[], searchAddress: string): void {\r\n        this.listOfSearchName = listOfSearchName;\r\n        this.searchAddress = searchAddress;\r\n        this.search();\r\n    }\r\n\r\n    search(): void {\r\n        \/** filter data **\/\r\n        const filterFunc = item => (this.searchAddress ? item.address.indexOf(this.searchAddress) !== -1 : true) && (this.listOfSearchName.length ? this.listOfSearchName.some(name => item.name.indexOf(name) !== -1) : true);\r\n        const data = this.data.filter(item => filterFunc(item));\r\n        \/** sort data **\/\r\n        if (this.sortName && this.sortValue) {\r\n            this.displayData = data.sort((a, b) => (this.sortValue === 'ascend') ? (a[ this.sortName ] > b[ this.sortName ] ? 1 : -1) : (b[ this.sortName ] > a[ this.sortName ] ? 1 : -1));\r\n        } else {\r\n            this.displayData = data;\r\n        }\r\n    }\r\n}",
    "tableResetFilterCode" : "import { Component } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-table-reset-filter',\r\n    template: `\r\n        <div class=\"table-operations\">\r\n            <button nz-button (click)=\"sort('age','descend')\">Sort age<\/button>\r\n            <button nz-button (click)=\"resetFilters()\">Clear filters<\/button>\r\n            <button nz-button (click)=\"resetSortAndFilters()\">Clear filters and sorters<\/button>\r\n        <\/div>\r\n        <nz-table #filterTable [nzData]=\"displayData\">\r\n            <thead>\r\n            <tr>\r\n                <th nzShowSort nzShowFilter [(nzSort)]=\"sortMap.name\" (nzSortChange)=\"sort('name',$event)\" [nzFilters]=\"filterNameList\" (nzFilterChange)=\"search($event,searchAddressList)\">Name<\/th>\r\n                <th nzShowSort [(nzSort)]=\"sortMap.age\" (nzSortChange)=\"sort('age',$event)\">Age<\/th>\r\n                <th nzShowSort nzShowFilter [(nzSort)]=\"sortMap.address\" (nzSortChange)=\"sort('address',$event)\" [nzFilters]=\"filterAddressList\" (nzFilterChange)=\"search(searchNameList,$event)\">Address<\/th>\r\n            <\/tr>\r\n            <\/thead>\r\n            <tbody>\r\n            <tr *ngFor=\"let data of filterTable.data\">\r\n                <td>{{data.name}}<\/td>\r\n                <td>{{data.age}}<\/td>\r\n                <td>{{data.address}}<\/td>\r\n            <\/tr>\r\n            <\/tbody>\r\n        <\/nz-table>`\r\n    \r\n})\r\nexport class NzDemoTableResetFilterComponent {\r\n    searchNameList = [];\r\n    searchAddressList = [];\r\n    filterNameList = [\r\n        { text: 'Joe', value: 'Joe' },\r\n        { text: 'Jim', value: 'Jim' }\r\n    ];\r\n    filterAddressList = [\r\n        { text: 'London', value: 'London' },\r\n        { text: 'Sidney', value: 'Sidney' }\r\n    ];\r\n    sortMap = {\r\n        name   : null,\r\n        age    : null,\r\n        address: null\r\n    };\r\n    sortName = null;\r\n    sortValue = null;\r\n\r\n    data = [\r\n        {\r\n            name   : 'John Brown',\r\n            age    : 32,\r\n            address: 'New York No. 1 Lake Park'\r\n        },\r\n        {\r\n            name   : 'Jim Green',\r\n            age    : 42,\r\n            address: 'London No. 1 Lake Park'\r\n        },\r\n        {\r\n            name   : 'Joe Black',\r\n            age    : 32,\r\n            address: 'Sidney No. 1 Lake Park'\r\n        },\r\n        {\r\n            name   : 'Jim Red',\r\n            age    : 32,\r\n            address: 'London No. 2 Lake Park'\r\n        }\r\n    ];\r\n    displayData = [ ...this.data ];\r\n\r\n    sort(sortName: string, value: string): void {\r\n        this.sortName = sortName;\r\n        this.sortValue = value;\r\n        for (const key in this.sortMap) {\r\n            this.sortMap[ key ] = (key === sortName ? value : null);\r\n        }\r\n        this.search(this.searchNameList, this.searchAddressList);\r\n    }\r\n\r\n    search(searchNameList: string[], searchAddressList: string[]): void {\r\n        this.searchNameList = searchNameList;\r\n        this.searchAddressList = searchAddressList;\r\n        const filterFunc = item => (this.searchAddressList.length ? this.searchAddressList.some(address => item.address.indexOf(address) !== -1) : true) && (this.searchNameList.length ? this.searchNameList.some(name => item.name.indexOf(name) !== -1) : true);\r\n        const data = this.data.filter(item => filterFunc(item));\r\n        if (this.sortName && this.sortValue) {\r\n            this.displayData = data.sort((a, b) => (this.sortValue === 'ascend') ? (a[ this.sortName ] > b[ this.sortName ] ? 1 : -1) : (b[ this.sortName ] > a[ this.sortName ] ? 1 : -1));\r\n        } else {\r\n            this.displayData = data;\r\n        }\r\n    }\r\n\r\n    resetFilters(): void {\r\n        this.filterNameList = [\r\n            { text: 'Joe', value: 'Joe' },\r\n            { text: 'Jim', value: 'Jim' }\r\n        ];\r\n        this.filterAddressList = [\r\n            { text: 'London', value: 'London' },\r\n            { text: 'Sidney', value: 'Sidney' }\r\n        ];\r\n        this.searchNameList = [];\r\n        this.searchAddressList = [];\r\n        this.search(this.searchNameList, this.searchAddressList);\r\n    }\r\n\r\n    resetSortAndFilters(): void {\r\n        this.sortName = null;\r\n        this.sortValue = null;\r\n        this.sortMap = {\r\n            name   : null,\r\n            age    : null,\r\n            address: null\r\n        };\r\n        this.resetFilters();\r\n        this.search(this.searchNameList, this.searchAddressList);\r\n    }\r\n}",
    "tableCustomizedFilterCode" : "import { Component } from '@angular\/core';\r\n\r\n@Component({\r\nselector: 'nz-demo-table-custom-filter-panel',\r\ntemplate: `\r\n    <nz-table #nzTable [nzData]=\"listOfDisplayData\">\r\n        <thead>\r\n            <tr>\r\n                <th nzCustomFilter>\r\n                    Name\r\n                    <i\r\n                    class=\"ant-table-filter-icon\"\r\n                    nz-icon\r\n                    nz-dropdown\r\n                    #dropdown=\"nzDropdown\"\r\n                    nzType=\"search\"\r\n                    [nzDropdownMenu]=\"menu\"\r\n                    [class.ant-table-filter-open]=\"dropdown.nzVisible\"\r\n                    nzTrigger=\"click\"\r\n                    nzPlacement=\"bottomRight\"\r\n                    [nzClickHide]=\"false\"\r\n                    nzTableFilter\r\n                    ><\/i>\r\n                <\/th>\r\n                <th>Age<\/th>\r\n                <th nzShowFilter [nzFilters]=\"listOfFilterAddress\" (nzFilterChange)=\"filterAddressChange($event)\">Address<\/th>\r\n            <\/tr>\r\n        <\/thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let data of nzTable.data\">\r\n                <td>{{ data.name }}<\/td>\r\n                <td>{{ data.age }}<\/td>\r\n                <td>{{ data.address }}<\/td>\r\n            <\/tr>\r\n        <\/tbody>\r\n    <\/nz-table>\r\n    <nz-dropdown-menu #menu=\"nzDropdownMenu\">\r\n        <div class=\"search-box\">\r\n            <input type=\"text\" nz-input placeholder=\"Search name\" [(ngModel)]=\"searchValue\" \/>\r\n            <button nz-button nzSize=\"small\" nzType=\"primary\" (click)=\"search()\" class=\"search-button\">\r\n                Search\r\n            <\/button>\r\n            <button nz-button nzSize=\"small\" (click)=\"reset()\">Reset<\/button>\r\n        <\/div>\r\n    <\/nz-dropdown-menu>\r\n`,\r\nstyles: [\r\n    `\r\n    .search-box {\r\n        padding: 8px;\r\n    }\r\n\r\n    .search-box input {\r\n        width: 188px;\r\n        margin-bottom: 8px;\r\n        display: block;\r\n    }\r\n\r\n    .search-box button {\r\n        width: 90px;\r\n    }\r\n\r\n    .search-button {\r\n        margin-right: 8px;\r\n    }\r\n    `\r\n]\r\n})\r\nexport class NzDemoTableCustomFilterPanelComponent {\r\n    searchValue = '';\r\n    sortName: string | null = null;\r\n    sortValue: string | null = null;\r\n    listOfFilterAddress = [{ text: 'London', value: 'London' }, { text: 'Sidney', value: 'Sidney' }];\r\n    listOfSearchAddress: string[] = [];\r\n    listOfData: Array<{ name: string; age: number; address: string; [key: string]: string | number }> = [\r\n        {\r\n            name: 'John Brown',\r\n            age: 32,\r\n            address: 'New York No. 1 Lake Park'\r\n        },\r\n        {\r\n            name: 'Jim Green',\r\n            age: 42,\r\n            address: 'London No. 1 Lake Park'\r\n        },\r\n        {\r\n            name: 'Joe Black',\r\n            age: 32,\r\n            address: 'Sidney No. 1 Lake Park'\r\n        },\r\n        {\r\n            name: 'Jim Red',\r\n            age: 32,\r\n            address: 'London No. 2 Lake Park'\r\n        }\r\n    ];\r\n    listOfDisplayData = [...this.listOfData];\r\n\r\n    reset(): void {\r\n        this.searchValue = '';\r\n        this.search();\r\n    }\r\n\r\n    sort(sortName: string, value: string): void {\r\n        this.sortName = sortName;\r\n        this.sortValue = value;\r\n        this.search();\r\n    }\r\n\r\n    filterAddressChange(value: string[]): void {\r\n        this.listOfSearchAddress = value;\r\n        this.search();\r\n    }\r\n\r\n    search(): void {\r\n        const filterFunc = (item: { name: string; age: number; address: string }) => {\r\n        return (\r\n            (this.listOfSearchAddress.length\r\n            ? this.listOfSearchAddress.some(address => item.address.indexOf(address) !== -1)\r\n            : true) && item.name.indexOf(this.searchValue) !== -1\r\n        );\r\n        };\r\n        const data = this.listOfData.filter((item: { name: string; age: number; address: string }) => filterFunc(item));\r\n        this.listOfDisplayData = data.sort((a, b) =>\r\n        this.sortValue === 'ascend'\r\n            ? a[this.sortName!] > b[this.sortName!]\r\n            ? 1\r\n            : -1\r\n            : b[this.sortName!] > a[this.sortName!]\r\n            ? 1\r\n            : -1\r\n        );\r\n    }\r\n}",
    "tableAjaxCode" : "import { HttpClient, HttpParams } from '@angular\/common\/http';\r\nimport { Component, Injectable, OnInit } from '@angular\/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class RandomUserService {\r\n    randomUserUrl = 'https:\/\/api.randomuser.me\/';\r\n\r\n    getUsers(pageIndex: number = 1, pageSize: number = 10, sortField: string, sortOrder: string, genders: string[]): Observable<{}> {\r\n        let params = new HttpParams()\r\n        .append('page', `${pageIndex}`)\r\n        .append('results', `${pageSize}`)\r\n        .append('sortField', sortField)\r\n        .append('sortOrder', sortOrder);\r\n        genders.forEach(gender => {\r\n            params = params.append('gender', gender);\r\n        });\r\n        return this.http.get(`${this.randomUserUrl}`, {\r\n            params\r\n        });\r\n    }\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector : 'nz-demo-table-ajax',\r\n    providers: [ RandomUserService ],\r\n    template : `\r\n    <nz-table\r\n        #ajaxTable\r\n        nzShowSizeChanger\r\n        [nzFrontPagination]=\"false\"\r\n        [nzData]=\"dataSet\"\r\n        [nzLoading]=\"loading\"\r\n        [nzTotal]=\"total\"\r\n        [(nzPageIndex)]=\"pageIndex\"\r\n        [(nzPageSize)]=\"pageSize\"\r\n        (nzPageIndexChange)=\"searchData()\"\r\n        (nzPageSizeChange)=\"searchData(true)\">\r\n        <thead (nzSortChange)=\"sort($event)\" nzSingleSort>\r\n            <tr>\r\n                <th nzShowSort nzSortKey=\"name\">Name<\/th>\r\n                <th nzShowFilter [nzFilters]=\"filterGender\" (nzFilterChange)=\"updateFilter($event)\">Gender<\/th>\r\n                <th nzShowSort nzSortKey=\"email\"><span>Email<\/span><\/th>\r\n            <\/tr>\r\n        <\/thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let data of ajaxTable.data\">\r\n                <td>{{data.name.first}} {{data.name.last}}<\/td>\r\n                <td>{{data.gender}}<\/td>\r\n                <td>{{data.email}}<\/td>\r\n            <\/tr>\r\n        <\/tbody>\r\n    <\/nz-table>`\r\n})\r\nexport class NzDemoTableAjaxComponent implements OnInit {\r\n    pageIndex = 1;\r\n    pageSize = 10;\r\n    total = 1;\r\n    dataSet = [];\r\n    loading = true;\r\n    sortValue = null;\r\n    sortKey = null;\r\n    filterGender = [\r\n        { text: 'male', value: 'male' },\r\n        { text: 'female', value: 'female' }\r\n    ];\r\n    searchGenderList: string[] = [];\r\n\r\n    sort(sort: { key: string, value: string }): void {\r\n        this.sortKey = sort.key;\r\n        this.sortValue = sort.value;\r\n        this.searchData();\r\n    }\r\n\r\n    constructor(private randomUserService: RandomUserService) {\r\n    }\r\n\r\n    searchData(reset: boolean = false): void {\r\n        if (reset) {\r\n            this.pageIndex = 1;\r\n        }\r\n        this.loading = true;\r\n        this.randomUserService.getUsers(this.pageIndex, this.pageSize, this.sortKey, this.sortValue, this.searchGenderList).subscribe((data: any) => {\r\n            this.loading = false;\r\n            this.total = 200;\r\n            this.dataSet = data.results;\r\n        });\r\n    }\r\n\r\n    updateFilter(value: string[]): void {\r\n        this.searchGenderList = value;\r\n        this.searchData(true);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.searchData();\r\n    }\r\n}",
    "tableSizeCode" : "import { Component } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-table-size',\r\n    template: `\r\n    <h5>Middle size table<\/h5>\r\n    <nz-table\r\n        #middleTable\r\n        nzSize=\"middle\"\r\n        [nzData]=\"data\">\r\n        <thead>\r\n            <tr>\r\n                <th>Name<\/th>\r\n                <th>Age<\/th>\r\n                <th>Address<\/th>\r\n            <\/tr>\r\n        <\/thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let data of middleTable.data\">\r\n                <td>{{data.name}}<\/td>\r\n                <td>{{data.age}}<\/td>\r\n                <td>{{data.address}}<\/td>\r\n            <\/tr>\r\n        <\/tbody>\r\n    <\/nz-table>\r\n    <h5>Small size table<\/h5>\r\n    <nz-table\r\n        #smallTable\r\n        nzSize=\"small\"\r\n        [nzData]=\"data\">\r\n        <thead>\r\n            <tr>\r\n                <th>Name<\/th>\r\n                <th>Age<\/th>\r\n                <th>Address<\/th>\r\n            <\/tr>\r\n        <\/thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let data of smallTable.data\">\r\n                <td>{{data.name}}<\/td>\r\n                <td>{{data.age}}<\/td>\r\n                <td>{{data.address}}<\/td>\r\n            <\/tr>\r\n        <\/tbody>\r\n    <\/nz-table>\r\n    `\r\n})\r\nexport class NzDemoTableSizeComponent {\r\n    data = [\r\n        {\r\n            key    : '1',\r\n            name   : 'John Brown',\r\n            age    : 32,\r\n            address: 'New York No. 1 Lake Park',\r\n        },\r\n        {\r\n            key    : '2',\r\n            name   : 'Jim Green',\r\n            age    : 42,\r\n            address: 'London No. 1 Lake Park',\r\n        },\r\n        {\r\n            key    : '3',\r\n            name   : 'Joe Black',\r\n            age    : 32,\r\n            address: 'Sidney No. 1 Lake Park',\r\n        }\r\n    ];\r\n}",
    "tableBorderedCode" : "import { Component } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-table-bordered',\r\n    template: `\r\n    <nz-table\r\n        #borderedTable\r\n        nzBordered\r\n        nzFooter=\"Footer\"\r\n        nzTitle=\"Header\"\r\n        [nzData]=\"dataSet\">\r\n        <thead>\r\n            <tr>\r\n                <th>Name<\/th>\r\n                <th>Age<\/th>\r\n                <th>Address<\/th>\r\n            <\/tr>\r\n        <\/thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let data of borderedTable.data\">\r\n                <td>{{data.name}}<\/td>\r\n                <td>{{data.age}}<\/td>\r\n                <td>{{data.address}}<\/td>\r\n            <\/tr>\r\n        <\/tbody>\r\n    <\/nz-table>\r\n    `\r\n})\r\nexport class NzDemoTableBorderedComponent {\r\n    dataSet = [\r\n        {\r\n            key    : '1',\r\n            name   : 'John Brown',\r\n            age    : 32,\r\n            address: 'New York No. 1 Lake Park'\r\n        },\r\n        {\r\n            key    : '2',\r\n            name   : 'Jim Green',\r\n            age    : 42,\r\n            address: 'London No. 1 Lake Park'\r\n        },\r\n        {\r\n            key    : '3',\r\n            name   : 'Joe Black',\r\n            age    : 32,\r\n            address: 'Sidney No. 1 Lake Park'\r\n        }\r\n    ];\r\n}",
    "tableExpandableRowCode" : "import { Component } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-table-expand',\r\n    template: `\r\n        <nz-table #nzTable [nzData]=\"dataSet\" [nzPageSize]=\"10\">\r\n            <thead>\r\n                <tr>\r\n                    <th nzShowExpand><\/th>\r\n                    <th>Name<\/th>\r\n                    <th>Age<\/th>\r\n                    <th>Address<\/th>\r\n                    <th>Action<\/th>\r\n                <\/tr>\r\n            <\/thead>\r\n            <tbody>\r\n                <ng-template ngFor let-data [ngForOf]=\"nzTable.data\">\r\n                    <tr>\r\n                        <td nzShowExpand [(nzExpand)]=\"data.expand\"><\/td>\r\n                        <td>{{data.name}}<\/td>\r\n                        <td>{{data.age}}<\/td>\r\n                        <td>{{data.address}}<\/td>\r\n                        <td><a href=\"#\">Delete<\/a><\/td>\r\n                    <\/tr>\r\n                    <tr [nzExpand]=\"data.expand\">\r\n                        <td><\/td>\r\n                        <td colspan=\"4\">{{data.description}}<\/td>\r\n                    <\/tr>\r\n                <\/ng-template>\r\n            <\/tbody>\r\n        <\/nz-table>`\r\n})\r\nexport class NzDemoTableExpandComponent {\r\n    dataSet = [\r\n        {\r\n            name       : 'John Brown',\r\n            age        : 32,\r\n            expand     : false,\r\n            address    : 'New York No. 1 Lake Park',\r\n            description: 'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.'\r\n        },\r\n        {\r\n            name       : 'Jim Green',\r\n            age        : 42,\r\n            expand     : false,\r\n            address    : 'London No. 1 Lake Park',\r\n            description: 'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.'\r\n        },\r\n        {\r\n            name       : 'Joe Black',\r\n            age        : 32,\r\n            expand     : false,\r\n            address    : 'Sidney No. 1 Lake Park',\r\n            description: 'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.'\r\n        }\r\n    ];\r\n}",
    "tableSpanCode" : "import { Component } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-table-colspan-rowspan',\r\n    template: `\r\n        <nz-table #nzTable [nzData]=\"dataSet\" [nzPageSize]=\"10\" nzBordered>\r\n            <thead>\r\n                <tr>\r\n                    <th>Name<\/th>\r\n                    <th>Age<\/th>\r\n                    <th colspan=\"2\">Home phone<\/th>\r\n                    <th>Address<\/th>\r\n                <\/tr>\r\n            <\/thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of nzTable.data; index as i;\">\r\n                    <td>{{data.name}}<\/td>\r\n                    <td [attr.colspan]=\"i==4?5:1\">{{data.age}}<\/td>\r\n                    <td [attr.rowspan]=\"i==2?2:1\" *ngIf=\"(i!=3)&&(i!=4)\">{{data.tel}}<\/td>\r\n                    <td *ngIf=\"i!=4\">{{data.phone}}<\/td>\r\n                    <td *ngIf=\"i!=4\">{{data.address}}<\/td>\r\n                <\/tr>\r\n            <\/tbody>\r\n        <\/nz-table>`\r\n})\r\nexport class NzDemoTableColspanRowspanComponent {\r\n    dataSet = [\r\n        {\r\n            key    : '1',\r\n            name   : 'John Brown',\r\n            age    : 32,\r\n            tel    : '0571-22098909',\r\n            phone  : 18889898989,\r\n            address: 'New York No. 1 Lake Park',\r\n        },\r\n        {\r\n            key    : '2',\r\n            name   : 'Jim Green',\r\n            tel    : '0571-22098333',\r\n            phone  : 18889898888,\r\n            age    : 42,\r\n            address: 'London No. 1 Lake Park',\r\n        },\r\n        {\r\n            key    : '3',\r\n            name   : 'Joe Black',\r\n            age    : 32,\r\n            tel    : '0575-22098909',\r\n            phone  : 18900010002,\r\n            address: 'Sidney No. 1 Lake Park',\r\n        },\r\n        {\r\n            key    : '4',\r\n            name   : 'Jim Red',\r\n            age    : 18,\r\n            tel    : '0575-22098909',\r\n            phone  : 18900010002,\r\n            address: 'London No. 2 Lake Park',\r\n        },\r\n        {\r\n            key    : '5',\r\n            name   : 'Jake White',\r\n            age    : 18,\r\n            tel    : '0575-22098909',\r\n            phone  : 18900010002,\r\n            address: 'Dublin No. 2 Lake Park',\r\n        }\r\n    ];\r\n}",
    "tableTreeDataCode" : "import { Component, OnInit } from '@angular\/core';\r\n\r\nexport interface TreeNodeInterface {\r\n    key: number;\r\n    name: string;\r\n    age: number;\r\n    level: number;\r\n    expand: boolean;\r\n    address: string;\r\n    children?: TreeNodeInterface[];\r\n}\r\n\r\n@Component({\r\n    selector: 'nz-demo-table-expand-children',\r\n    template: `\r\n        <nz-table #nzTable [nzData]=\"data\">\r\n            <thead>\r\n                <tr>\r\n                    <th nzWidth=\"40%\">Name<\/th>\r\n                    <th nzWidth=\"30%\">Age<\/th>\r\n                    <th>Address<\/th>\r\n                <\/tr>\r\n            <\/thead>\r\n            <tbody>\r\n                <ng-template ngFor let-data [ngForOf]=\"nzTable.data\">\r\n                    <ng-template ngFor let-item [ngForOf]=\"expandDataCache[data.key]\">\r\n                        <tr *ngIf=\"(item.parent&&item.parent.expand)||!(item.parent)\">\r\n                            <td [nzIndentSize]=\"item.level*20\" [nzShowExpand]=\"!!item.children\" [(nzExpand)]=\"item.expand\" (nzExpandChange)=\"collapse(expandDataCache[data.key],item,$event)\">\r\n                            {{item.name}}\r\n                            <\/td>\r\n                            <td>{{item.age}}<\/td>\r\n                            <td>{{item.address}}<\/td>\r\n                        <\/tr>\r\n                    <\/ng-template>\r\n                <\/ng-template>\r\n            <\/tbody>\r\n        <\/nz-table>`\r\n})\r\nexport class NzDemoTableExpandChildrenComponent implements OnInit {\r\n    data = [\r\n        {\r\n            key     : 1,\r\n            name    : 'John Brown sr.',\r\n            age     : 60,\r\n            address : 'New York No. 1 Lake Park',\r\n            children: [\r\n            {\r\n                key    : 11,\r\n                name   : 'John Brown',\r\n                age    : 42,\r\n                address: 'New York No. 2 Lake Park'\r\n            },\r\n            {\r\n                key     : 12,\r\n                name    : 'John Brown jr.',\r\n                age     : 30,\r\n                address : 'New York No. 3 Lake Park',\r\n                children: [ {\r\n                    key    : 121,\r\n                    name   : 'Jimmy Brown',\r\n                    age    : 16,\r\n                    address: 'New York No. 3 Lake Park'\r\n                } ]\r\n            },\r\n            {\r\n                key     : 13,\r\n                name    : 'Jim Green sr.',\r\n                age     : 72,\r\n                address : 'London No. 1 Lake Park',\r\n                children: [\r\n                    {\r\n                        key     : 131,\r\n                        name    : 'Jim Green',\r\n                        age     : 42,\r\n                        address : 'London No. 2 Lake Park',\r\n                        children: [\r\n                        {\r\n                            key    : 1311,\r\n                            name   : 'Jim Green jr.',\r\n                            age    : 25,\r\n                            address: 'London No. 3 Lake Park'\r\n                        },\r\n                        {\r\n                            key    : 1312,\r\n                            name   : 'Jimmy Green sr.',\r\n                            age    : 18,\r\n                            address: 'London No. 4 Lake Park'\r\n                        }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        key    : 2,\r\n        name   : 'Joe Black',\r\n        age    : 32,\r\n        address: 'Sidney No. 1 Lake Park'\r\n    }\r\n    ];\r\n    expandDataCache = {};\r\n\r\n    collapse(array: TreeNodeInterface[], data: TreeNodeInterface, $event: boolean): void {\r\n        if ($event === false) {\r\n            if (data.children) {\r\n                data.children.forEach(d => {\r\n                    const target = array.find(a => a.key === d.key);\r\n                    target.expand = false;\r\n                    this.collapse(array, target, false);\r\n                });\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    convertTreeToList(root: object): TreeNodeInterface[] {\r\n        const stack = [];\r\n        const array = [];\r\n        const hashMap = {};\r\n        stack.push({ ...root, level: 0, expand: false });\r\n\r\n        while (stack.length !== 0) {\r\n            const node = stack.pop();\r\n            this.visitNode(node, hashMap, array);\r\n            if (node.children) {\r\n                for (let i = node.children.length - 1; i >= 0; i--) {\r\n                    stack.push({ ...node.children[ i ], level: node.level + 1, expand: false, parent: node });\r\n                }\r\n            }\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    visitNode(node: TreeNodeInterface, hashMap: object, array: TreeNodeInterface[]): void {\r\n        if (!hashMap[ node.key ]) {\r\n            hashMap[ node.key ] = true;\r\n            array.push(node);\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.data.forEach(item => {\r\n            this.expandDataCache[ item.key ] = this.convertTreeToList(item);\r\n        });\r\n    }\r\n}",
    "tableFixHeaderCode" : "import { Component, OnInit } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-table-fixed-header',\r\n    template: `\r\n        <nz-table #nzTable [nzData]=\"dataSet\" [nzPageSize]=\"50\" [nzScroll]=\"{ y: '240px' }\">\r\n            <thead>\r\n            <tr>\r\n                <th nzWidth=\"150px\">Name<\/th>\r\n                <th nzWidth=\"150px\">Age<\/th>\r\n                <th>Address<\/th>\r\n            <\/tr>\r\n            <\/thead>\r\n            <tbody>\r\n            <tr *ngFor=\"let data of nzTable.data\">\r\n                <td>{{data.name}}<\/td>\r\n                <td>{{data.age}}<\/td>\r\n                <td>{{data.address}}<\/td>\r\n            <\/tr>\r\n            <\/tbody>\r\n        <\/nz-table>`\r\n})\r\nexport class NzDemoTableFixedHeaderComponent implements OnInit {\r\n    dataSet = [];\r\n\r\n    ngOnInit(): void {\r\n        for (let i = 0; i < 100; i++) {\r\n            this.dataSet.push({\r\n                name   : `Edward King ${i}`,\r\n                age    : 32,\r\n                address: `London, Park Lane no. ${i}`\r\n            });\r\n        }\r\n    }\r\n}",
    "tableFixColumnCode" : "import { Component } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-table-fixed-columns',\r\n    template: `\r\n        <nz-table #nzTable [nzData]=\"dataSet\" [nzPageSize]=\"10\" [nzScroll]=\"{x:'1300px'}\">\r\n            <thead>\r\n                <tr>\r\n                    <th nzWidth=\"100px\" nzLeft=\"0px\">Full Name<\/th>\r\n                    <th nzWidth=\"100px\" nzLeft=\"100px\">Age<\/th>\r\n                    <th>Column 1<\/th>\r\n                    <th>Column 2<\/th>\r\n                    <th>Column 3<\/th>\r\n                    <th>Column 4<\/th>\r\n                    <th>Column 5<\/th>\r\n                    <th>Column 6<\/th>\r\n                    <th>Column 7<\/th>\r\n                    <th>Column 8<\/th>\r\n                    <th nzWidth=\"100px\" nzRight=\"0px\">Action<\/th>\r\n                <\/tr>\r\n            <\/thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of nzTable.data\">\r\n                    <td nzLeft=\"0px\">{{data.name}}<\/td>\r\n                    <td nzLeft=\"100px\">{{data.age}}<\/td>\r\n                    <td>{{data.address}}<\/td>\r\n                    <td>{{data.address}}<\/td>\r\n                    <td>{{data.address}}<\/td>\r\n                    <td>{{data.address}}<\/td>\r\n                    <td>{{data.address}}<\/td>\r\n                    <td>{{data.address}}<\/td>\r\n                    <td>{{data.address}}<\/td>\r\n                    <td>{{data.address}}<\/td>\r\n                    <td nzRight=\"0px\">\r\n                        <a>action<\/a>\r\n                    <\/td>\r\n                <\/tr>\r\n            <\/tbody>\r\n        <\/nz-table>`\r\n})\r\nexport class NzDemoTableFixedColumnsComponent {\r\n    dataSet = [\r\n        {\r\n            key    : '1',\r\n            name   : 'John Brown',\r\n            age    : 32,\r\n            address: 'New York Park',\r\n        },\r\n        {\r\n            key    : '2',\r\n            name   : 'Jim Green',\r\n            age    : 40,\r\n            address: 'London Park',\r\n        }\r\n    ];\r\n}",
    "tableFixColumnHeaderCode" : "import { Component, OnInit } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-table-fixed-columns-header',\r\n    template: `\r\n        <nz-table #nzTable [nzData]=\"dataSet\" [nzPageSize]=\"10\" [nzScroll]=\"{ x:'1300px',y: '240px' }\">\r\n            <thead>\r\n                <tr>\r\n                    <th nzWidth=\"100px\" nzLeft=\"0px\">Full Name<\/th>\r\n                    <th nzWidth=\"100px\" nzLeft=\"100px\">Age<\/th>\r\n                    <th>Column 1<\/th>\r\n                    <th>Column 2<\/th>\r\n                    <th>Column 3<\/th>\r\n                    <th>Column 4<\/th>\r\n                    <th>Column 5<\/th>\r\n                    <th>Column 6<\/th>\r\n                    <th>Column 7<\/th>\r\n                    <th>Column 8<\/th>\r\n                    <th nzWidth=\"100px\" nzRight=\"0px\">Action<\/th>\r\n                <\/tr>\r\n            <\/thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of nzTable.data\">\r\n                    <td nzLeft=\"0px\">{{data.name}}<\/td>\r\n                    <td nzLeft=\"100px\">{{data.age}}<\/td>\r\n                    <td>{{data.address}}<\/td>\r\n                    <td>{{data.address}}<\/td>\r\n                    <td>{{data.address}}<\/td>\r\n                    <td>{{data.address}}<\/td>\r\n                    <td>{{data.address}}<\/td>\r\n                    <td>{{data.address}}<\/td>\r\n                    <td>{{data.address}}<\/td>\r\n                    <td>{{data.address}}<\/td>\r\n                    <td nzRight=\"0px\">\r\n                    <a>action<\/a>\r\n                    <\/td>\r\n                <\/tr>\r\n            <\/tbody>\r\n        <\/nz-table>`\r\n})\r\nexport class NzDemoTableFixedColumnsHeaderComponent implements OnInit {\r\n    dataSet = [];\r\n\r\n    ngOnInit(): void {\r\n        for (let i = 0; i < 100; i++) {\r\n            this.dataSet.push({\r\n                name   : `Edward King ${i}`,\r\n                age    : 32,\r\n                address: `London, Park Lane no. ${i}`\r\n            });\r\n        }\r\n    }\r\n}",
    "tableGroupingCode" : "import { Component, OnInit } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-table-grouping-columns',\r\n    template: `\r\n        <nz-table\r\n            #groupingTable\r\n            [nzData]=\"displayData\"\r\n            nzBordered\r\n            nzSize=\"middle\"\r\n            [nzWidthConfig]=\"['100px','200px','200px','100px','100px',null,null,'60px']\"\r\n            [nzScroll]=\"{ x:'130%',y: '240px' }\">\r\n            <thead>\r\n                <tr style=\"height: 46px;\">\r\n                    <th rowspan=\"4\" nzLeft=\"0px\" nzShowFilter [nzFilters]=\"filterName\" (nzFilterChange)=\"search($event)\">Name<\/th>\r\n                    <th colspan=\"4\">Other<\/th>\r\n                    <th colspan=\"2\">Company<\/th>\r\n                    <th rowspan=\"4\" nzRight=\"0px\">Gender<\/th>\r\n                <\/tr>\r\n                <tr style=\"height: 46px;\">\r\n                    <th rowspan=\"3\" nzShowSort [(nzSort)]=\"sortValue\" (nzSortChange)=\"search(searchName)\">Age<\/th>\r\n                    <th colspan=\"3\">Address<\/th>\r\n                    <th rowspan=\"3\">Company Address<\/th>\r\n                    <th rowspan=\"3\">Company Name<\/th>\r\n                <\/tr>\r\n                <tr style=\"height: 46px;\">\r\n                    <th rowspan=\"2\">Street<\/th>\r\n                    <th colspan=\"2\">Block<\/th>\r\n                <\/tr>\r\n                <tr style=\"height: 46px;\">\r\n                    <th>Building<\/th>\r\n                    <th>Door No.<\/th>\r\n                <\/tr>\r\n            <\/thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of groupingTable.data\">\r\n                    <td nzLeft=\"0px\">{{data.name}}<\/td>\r\n                    <td>{{data.age}}<\/td>\r\n                    <td>{{data.street}}<\/td>\r\n                    <td>{{data.building}}<\/td>\r\n                    <td>{{data.number}}<\/td>\r\n                    <td>{{data.companyAddress}}<\/td>\r\n                    <td>{{data.companyName}}<\/td>\r\n                    <td nzRight=\"0px\">{{data.gender}}<\/td>\r\n                <\/tr>\r\n            <\/tbody>\r\n        <\/nz-table>`\r\n})\r\nexport class NzDemoTableGroupingColumnsComponent implements OnInit {\r\n    displayData = [];\r\n    data = [];\r\n    sortValue = null;\r\n    filterName = [\r\n        { text: 'Joe', value: 'Joe' },\r\n        { text: 'John', value: 'John' }\r\n    ];\r\n    searchName = [];\r\n\r\n    search(searchName: string[]): void {\r\n        this.searchName = searchName;\r\n        const filterFunc = (item) => {\r\n            return this.searchName.length ? this.searchName.some(name => item.name.indexOf(name) !== -1) : true;\r\n        };\r\n        const data = this.data.filter(item => filterFunc(item));\r\n        this.displayData = data.sort((a, b) => (this.sortValue === 'ascend') ? (a.age > b.age ? 1 : -1) : (b.age > a.age ? 1 : -1));\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        for (let i = 0; i < 100; i++) {\r\n            this.displayData.push({\r\n            name          : 'John Brown',\r\n            age           : i + 1,\r\n            street        : 'Lake Park',\r\n            building      : 'C',\r\n            number        : 2035,\r\n            companyAddress: 'Lake Street 42',\r\n            companyName   : 'SoftLake Co',\r\n            gender        : 'M'\r\n            });\r\n        }\r\n        this.data = [ ...this.displayData ];\r\n    }\r\n}",
    "tableEditableCellsCode" : "import { Component, OnInit } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-table-edit-cell',\r\n    template: `\r\n        <button nz-button (click)=\"addRow()\" class=\"m-b-10\">Add<\/button>\r\n        <nz-table\r\n            #editRowTable\r\n            nzBordered\r\n            [nzData]=\"dataSet\">\r\n            <thead>\r\n                <tr>\r\n                    <th nzWidth=\"30%\">Name<\/th>\r\n                    <th>Age<\/th>\r\n                    <th>Address<\/th>\r\n                    <th>Action<\/th>\r\n                <\/tr>\r\n            <\/thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of editRowTable.data\">\r\n                    <td>\r\n                        <div class=\"editable-cell\">\r\n                            <div class=\"editable-cell-text-wrapper\">\r\n                            <ng-container *ngIf=\"!editCache[data.key].edit\">\r\n                                {{data.name}}\r\n                                <i nz-icon nzType=\"edit\"  class=\"editable-cell-icon\" (click)=\"startEdit(data.key)\"><\/i>\r\n                            <\/ng-container>\r\n                            <ng-container *ngIf=\"editCache[data.key].edit\">\r\n                                <input type=\"text\" nz-input [(ngModel)]=\"editCache[data.key].name\">\r\n                                <i nz-icon nzType=\"check\" class=\"editable-cell-icon-check\" (click)=\"finishEdit(data.key)\"><\/i>\r\n                            <\/ng-container>\r\n                            <\/div>\r\n                        <\/div>\r\n                    <\/td>\r\n                    <td>{{data.age}}<\/td>\r\n                    <td>{{data.address}}<\/td>\r\n                    <td>\r\n                        <a nz-popconfirm nzTitle=\"Sure to delete?\" (nzOnConfirm)=\"deleteRow(data.key)\">Delete<\/a>\r\n                    <\/td>\r\n                <\/tr>\r\n            <\/tbody>\r\n        <\/nz-table>\r\n    `\r\n})\r\nexport class NzDemoTableEditCellComponent implements OnInit {\r\n    i = 1;\r\n    editCache = {};\r\n    dataSet = [\r\n        {\r\n            key    : '0',\r\n            name   : 'Edward King 0',\r\n            age    : '32',\r\n            address: 'London, Park Lane no. 0'\r\n        },\r\n        {\r\n            key    : '1',\r\n            name   : 'Edward King 1',\r\n            age    : '32',\r\n            address: 'London, Park Lane no. 1'\r\n        }\r\n    ];\r\n\r\n    addRow(): void {\r\n        this.i++;\r\n        this.dataSet = [ ...this.dataSet, {\r\n            key    : `${this.i}`,\r\n            name   : `Edward King ${this.i}`,\r\n            age    : '32',\r\n            address: `London, Park Lane no. ${this.i}`\r\n        } ];\r\n        this.updateEditCache();\r\n    }\r\n\r\n    deleteRow(i: string): void {\r\n        const dataSet = this.dataSet.filter(d => d.key !== i);\r\n        this.dataSet = dataSet;\r\n    }\r\n\r\n    startEdit(key: string): void {\r\n        this.editCache[ key ].edit = true;\r\n    }\r\n\r\n    finishEdit(key: string): void {\r\n        this.editCache[ key ].edit = false;\r\n        this.dataSet.find(item => item.key === key).name = this.editCache[ key ].name;\r\n    }\r\n\r\n    updateEditCache(): void {\r\n        this.dataSet.forEach(item => {\r\n            if (!this.editCache[ item.key ]) {\r\n                this.editCache[ item.key ] = {\r\n                    edit: false,\r\n                    name: item.name\r\n                };\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.updateEditCache();\r\n    }\r\n}",
    "tableEditableRowCode" : "import { Component, OnInit } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-table-edit-row',\r\n    template: `\r\n    <nz-table\r\n        #editRowTable\r\n        nzBordered\r\n        [nzData]=\"dataSet\">\r\n        <thead>\r\n            <tr>\r\n                <th nzWidth=\"25%\">Name<\/th>\r\n                <th nzWidth=\"15%\">Age<\/th>\r\n                <th nzWidth=\"40%\">Address<\/th>\r\n                <th>Action<\/th>\r\n            <\/tr>\r\n        <\/thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let data of editRowTable.data\">\r\n                <td>\r\n                    <div class=\"editable-cell\">\r\n                        <div class=\"editable-cell-text-wrapper\">\r\n                        <ng-container *ngIf=\"!editCache[data.key].edit\">\r\n                            {{data.name}}\r\n                        <\/ng-container>\r\n                        <ng-container *ngIf=\"editCache[data.key].edit\">\r\n                            <input type=\"text\" nz-input [(ngModel)]=\"editCache[data.key].data.name\">\r\n                        <\/ng-container>\r\n                        <\/div>\r\n                    <\/div>\r\n                <\/td>\r\n                <td>\r\n                    <ng-container *ngIf=\"!editCache[data.key].edit\">\r\n                        {{data.age}}\r\n                    <\/ng-container>\r\n                    <ng-container *ngIf=\"editCache[data.key].edit\">\r\n                        <input type=\"text\" nz-input [(ngModel)]=\"editCache[data.key].data.age\">\r\n                    <\/ng-container>\r\n                <\/td>\r\n                <td>\r\n                    <ng-container *ngIf=\"!editCache[data.key].edit\">\r\n                        {{data.address}}\r\n                    <\/ng-container>\r\n                    <ng-container *ngIf=\"editCache[data.key].edit\">\r\n                        <input type=\"text\" nz-input [(ngModel)]=\"editCache[data.key].data.address\">\r\n                    <\/ng-container>\r\n                <\/td>\r\n                <td>\r\n                    <div class=\"editable-row-operations\">\r\n                        <ng-container *ngIf=\"!editCache[data.key].edit\">\r\n                            <a (click)=\"startEdit(data.key)\">Edit<\/a>\r\n                        <\/ng-container>\r\n                        <ng-container *ngIf=\"editCache[data.key].edit\">\r\n                            <a (click)=\"saveEdit(data.key)\">Save<\/a>\r\n                            <a nz-popconfirm nzTitle=\"Sure to cancel?\" (nzOnConfirm)=\"tableEditableRowCancelEdit(data.key)\">Cancel<\/a>\r\n                        <\/ng-container>\r\n                    <\/div>\r\n                <\/td>\r\n            <\/tr>\r\n        <\/tbody>\r\n    <\/nz-table> `\r\n})\r\nexport class NzDemoTableEditRowComponent implements OnInit {\r\n    i = 1;\r\n    editCache = {};\r\n    dataSet = [];\r\n\r\n    startEdit(key: string): void {\r\n        this.editCache[ key ].edit = true;\r\n    }\r\n\r\n    cancelEdit(key: string): void {\r\n        this.editCache[ key ].edit = false;\r\n    }\r\n\r\n    saveEdit(key: string): void {\r\n        const index = this.dataSet.findIndex(item => item.key === key);\r\n        Object.assign(this.dataSet[ index ], this.editCache[ key ].data);\r\n        \/\/ this.dataSet[ index ] = this.editCache[ key ].data;\r\n        this.editCache[ key ].edit = false;\r\n    }\r\n\r\n    updateEditCache(): void {\r\n        this.dataSet.forEach(item => {\r\n            if (!this.editCache[ item.key ]) {\r\n                this.editCache[ item.key ] = {\r\n                    edit: false,\r\n                    data: { ...item }\r\n                };\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        for (let i = 0; i < 100; i++) {\r\n            this.dataSet.push({\r\n                key    : i.toString(),\r\n                name   : `Edrward ${i}`,\r\n                age    : 32,\r\n                address: `London Park no. ${i}`\r\n            });\r\n        }\r\n        this.updateEditCache();\r\n    }\r\n}",
    "tableNestedCode" : "import { Component, OnInit } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-table-nested-table',\r\n    template: `\r\n        <nz-table #nestedTable [nzData]=\"listOfParentData\" [nzPageSize]=\"10\">\r\n            <thead>\r\n                <tr>\r\n                    <th nzShowExpand><\/th>\r\n                    <th>Name<\/th>\r\n                    <th>Platform<\/th>\r\n                    <th>Version<\/th>\r\n                    <th>Upgraded<\/th>\r\n                    <th>Creator<\/th>\r\n                    <th>Date<\/th>\r\n                    <th>Action<\/th>\r\n                <\/tr>\r\n            <\/thead>\r\n            <tbody>\r\n                <ng-template ngFor let-data [ngForOf]=\"nestedTable.data\">\r\n                <tr>\r\n                    <td nzShowExpand [(nzExpand)]=\"data.expand\"><\/td>\r\n                    <td>{{ data.name }}<\/td>\r\n                    <td>{{ data.platform }}<\/td>\r\n                    <td>{{ data.version }}<\/td>\r\n                    <td>{{ data.upgradeNum }}<\/td>\r\n                    <td>{{ data.creator }}<\/td>\r\n                    <td>{{ data.createdAt }}<\/td>\r\n                    <td>\r\n                        <a>Publish<\/a>\r\n                    <\/td>\r\n                <\/tr>\r\n                <tr [nzExpand]=\"data.expand\">\r\n                    <td><\/td>\r\n                    <td colspan=\"7\">\r\n                        <nz-table #innerTable [nzData]=\"listOfChildrenData\" nzSize=\"middle\" [nzShowPagination]=\"false\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Date<\/th>\r\n                                    <th>Name<\/th>\r\n                                    <th>Status<\/th>\r\n                                    <th>Upgrade Status<\/th>\r\n                                    <th>Action<\/th>\r\n                                <\/tr>\r\n                            <\/thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let data of innerTable.data\">\r\n                                    <td>{{ data.date }}<\/td>\r\n                                    <td>{{ data.name }}<\/td>\r\n                                    <td>\r\n                                        <nz-badge [nzStatus]=\"'success'\" [nzText]=\"'Finished'\"><\/nz-badge>\r\n                                    <\/td>\r\n                                    <td>{{ data.upgradeNum }}<\/td>\r\n                                    <td>\r\n                                        <span class=\"table-operation\">\r\n                                            <a nz-dropdown class=\"operation\" [nzDropdownMenu]=\"menu\">\r\n                                                Pause <i nz-icon nzType=\"down\"><\/i>\r\n                                            <\/a>\r\n                                            <nz-dropdown-menu #menu=\"nzDropdownMenu\">\r\n                                                <ul nz-menu>\r\n                                                    <li nz-menu-item>\r\n                                                    <a>Action 1<\/a>\r\n                                                    <\/li>\r\n                                                    <li nz-menu-item>\r\n                                                    <a>Action 2<\/a>\r\n                                                    <\/li>\r\n                                                <\/ul>\r\n                                            <\/nz-dropdown-menu>\r\n                                            <nz-divider nzType=\"vertical\"><\/nz-divider>\r\n                                            <a class=\"operation\">Stop<\/a>\r\n                                            <nz-divider nzType=\"vertical\"><\/nz-divider>\r\n                                            <a>More<\/a>\r\n                                        <\/span>\r\n                                    <\/td>\r\n                                <\/tr>\r\n                            <\/tbody>\r\n                        <\/nz-table>\r\n                    <\/td>\r\n                <\/tr>\r\n                <\/ng-template>\r\n            <\/tbody>\r\n        <\/nz-table>\r\n    `\r\n    })\r\nexport class NzDemoTableNestedTableComponent implements OnInit {\r\n    listOfParentData: any[] = [];\r\n    listOfChildrenData: any[] = [];\r\n\r\n    ngOnInit(): void {\r\n        for (let i = 0; i < 3; ++i) {\r\n            this.listOfParentData.push({\r\n                key: i,\r\n                name: 'Screem',\r\n                platform: 'iOS',\r\n                version: '10.3.4.5654',\r\n                upgradeNum: 500,\r\n                creator: 'Jack',\r\n                createdAt: '2014-12-24 23:12:00',\r\n                expand: false\r\n            });\r\n        }\r\n        for (let i = 0; i < 3; ++i) {\r\n            this.listOfChildrenData.push({\r\n                key: i,\r\n                date: '2014-12-24 23:12:00',\r\n                name: 'This is production name',\r\n                upgradeNum: 'Upgraded: 56'\r\n            });\r\n        }\r\n    }\r\n}",
    "tableDynamicCode" : "import { Component, OnInit } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-table-dynamic-settings',\r\n    template: `\r\n        <div class=\"m-b-20\">\r\n            <form nz-form nzLayout=\"inline\">\r\n                <nz-form-item class=\"m-r-15 m-b-10\">\r\n                    <nz-form-label>\r\n                        <label>Bordered<\/label>\r\n                    <\/nz-form-label>\r\n                    <nz-form-control>\r\n                        <nz-switch [(ngModel)]=\"bordered\" name=\"bordered\"><\/nz-switch>\r\n                    <\/nz-form-control>\r\n                <\/nz-form-item>\r\n                <nz-form-item class=\"m-r-15 m-b-10\">\r\n                    <nz-form-label>\r\n                        <label>Loading<\/label>\r\n                    <\/nz-form-label>\r\n                    <nz-form-control>\r\n                        <nz-switch [(ngModel)]=\"loading\" name=\"loading\"><\/nz-switch>\r\n                    <\/nz-form-control>\r\n                <\/nz-form-item>\r\n                <nz-form-item class=\"m-r-15 m-b-10\">\r\n                    <nz-form-label>\r\n                        <label>Pagination<\/label>\r\n                    <\/nz-form-label>\r\n                    <nz-form-control>\r\n                        <nz-switch [(ngModel)]=\"pagination\" name=\"pagination\"><\/nz-switch>\r\n                    <\/nz-form-control>\r\n                <\/nz-form-item>\r\n                <nz-form-item class=\"m-r-15 m-b-10\">\r\n                    <nz-form-label>\r\n                        <label>Title<\/label>\r\n                    <\/nz-form-label>\r\n                    <nz-form-control>\r\n                        <nz-switch [(ngModel)]=\"title\" name=\"title\"><\/nz-switch>\r\n                    <\/nz-form-control>\r\n                <\/nz-form-item>\r\n                <nz-form-item class=\"m-r-15 m-b-10\">\r\n                    <nz-form-label>\r\n                        <label>Column Header<\/label>\r\n                    <\/nz-form-label>\r\n                    <nz-form-control>\r\n                        <nz-switch [(ngModel)]=\"header\" name=\"header\"><\/nz-switch>\r\n                    <\/nz-form-control>\r\n                <\/nz-form-item>\r\n                <nz-form-item class=\"m-r-15 m-b-10\">\r\n                    <nz-form-label>\r\n                        <label>Footer<\/label>\r\n                    <\/nz-form-label>\r\n                    <nz-form-control>\r\n                        <nz-switch [(ngModel)]=\"footer\" name=\"footer\"><\/nz-switch>\r\n                    <\/nz-form-control>\r\n                <\/nz-form-item>\r\n                <nz-form-item class=\"m-r-15 m-b-10\">\r\n                    <nz-form-label>\r\n                        <label>Expandable<\/label>\r\n                    <\/nz-form-label>\r\n                    <nz-form-control>\r\n                        <nz-switch [(ngModel)]=\"expandable\" name=\"expandable\"><\/nz-switch>\r\n                    <\/nz-form-control>\r\n                <\/nz-form-item>\r\n                <nz-form-item class=\"m-r-15 m-b-10\">\r\n                    <nz-form-label>\r\n                        <label>Checkbox<\/label>\r\n                    <\/nz-form-label>\r\n                    <nz-form-control>\r\n                        <nz-switch [(ngModel)]=\"checkbox\" name=\"checkbox\"><\/nz-switch>\r\n                    <\/nz-form-control>\r\n                <\/nz-form-item>\r\n                <nz-form-item class=\"m-r-15 m-b-10\">\r\n                    <nz-form-label>\r\n                        <label>Fixed Header<\/label>\r\n                    <\/nz-form-label>\r\n                    <nz-form-control>\r\n                        <nz-switch [(ngModel)]=\"fixHeader\" name=\"fixHeader\"><\/nz-switch>\r\n                    <\/nz-form-control>\r\n                <\/nz-form-item>\r\n                <nz-form-item class=\"m-r-15 m-b-10\">\r\n                    <nz-form-label>\r\n                        <label>No Result<\/label>\r\n                    <\/nz-form-label>\r\n                    <nz-form-control>\r\n                        <nz-switch [(ngModel)]=\"noResult\" (ngModelChange)=\"noResultChange($event)\" name=\"noResult\"><\/nz-switch>\r\n                    <\/nz-form-control>\r\n                <\/nz-form-item>\r\n                <nz-form-item class=\"m-r-15 m-b-10\">\r\n                    <nz-form-label>\r\n                        <label>Simple Pagination<\/label>\r\n                    <\/nz-form-label>\r\n                    <nz-form-control>\r\n                        <nz-switch [(ngModel)]=\"simple\" name=\"simple\"><\/nz-switch>\r\n                    <\/nz-form-control>\r\n                <\/nz-form-item>\r\n                <nz-form-item class=\"m-r-15 m-b-10\">\r\n                    <nz-form-label>\r\n                        <label>Size<\/label>\r\n                    <\/nz-form-label>\r\n                    <nz-form-control>\r\n                        <nz-radio-group [(ngModel)]=\"size\" name=\"size\">\r\n                            <label nz-radio-button nzValue=\"default\">Default<\/label>\r\n                            <label nz-radio-button nzValue=\"middle\">Middle<\/label>\r\n                            <label nz-radio-button nzValue=\"small\">Small<\/label>\r\n                        <\/nz-radio-group>\r\n                    <\/nz-form-control>\r\n                <\/nz-form-item>\r\n            <\/form>\r\n        <\/div>\r\n        <nz-table\r\n            #dynamicTable\r\n            (nzCurrentPageDataChange)=\"currentPageDataChange($event)\"\r\n            [nzScroll]=\"fixHeader?{ y: '240px' }:null\"\r\n            [nzData]=\"dataSet\"\r\n            [nzBordered]=\"bordered\"\r\n            [nzSimple]=\"simple\"\r\n            [nzLoading]=\"loading\"\r\n            [nzFrontPagination]=\"pagination\"\r\n            [nzShowPagination]=\"pagination\"\r\n            [nzFooter]=\"footer?'Here is Footer':null\"\r\n            [nzTitle]=\"title?'Here is Title':null\"\r\n            [nzSize]=\"size\">\r\n            <thead>\r\n                <tr *ngIf=\"header\">\r\n                    <th nzWidth=\"50px\" nzShowExpand *ngIf=\"expandable\"><\/th>\r\n                    <th nzWidth=\"62px\" nzShowCheckbox *ngIf=\"checkbox\" [(nzChecked)]=\"allChecked\" [nzIndeterminate]=\"indeterminate\" (nzCheckedChange)=\"checkAll($event)\"><\/th>\r\n                    <th nzWidth=\"150px\">Name<\/th>\r\n                    <th nzWidth=\"70px\">Age<\/th>\r\n                    <th>Address<\/th>\r\n                    <th nzWidth=\"260px\">Action<\/th>\r\n                <\/tr>\r\n            <\/thead>\r\n            <tbody>\r\n                <ng-template ngFor let-data [ngForOf]=\"dynamicTable.data\">\r\n                    <tr>\r\n                        <td nzShowExpand *ngIf=\"expandable\" [(nzExpand)]=\"data.expand\"><\/td>\r\n                        <td nzShowCheckbox *ngIf=\"checkbox\" [(nzChecked)]=\"data.checked\" (nzCheckedChange)=\"refreshStatus()\"><\/td>\r\n                        <td>{{data.name}}<\/td>\r\n                        <td>{{data.age}}<\/td>\r\n                        <td>{{data.address}}<\/td>\r\n                        <td>\r\n                            <a href=\"#\">Action \u4E00 {{data.name}}<\/a>\r\n                            <nz-divider nzType=\"vertical\"><\/nz-divider>\r\n                            <a href=\"#\">Delete<\/a>\r\n                        <\/td>\r\n                    <\/tr>\r\n                    <tr [nzExpand]=\"data.expand&&expandable\">\r\n                        <td><\/td>\r\n                        <td [attr.colspan]=\"checkbox?5:4\">{{data.description}}<\/td>\r\n                    <\/tr>\r\n                <\/ng-template>\r\n            <\/tbody>\r\n        <\/nz-table>`\r\n})\r\nexport class NzDemoTableDynamicSettingsComponent implements OnInit {\r\n    dataSet = [];\r\n    bordered = false;\r\n    loading = false;\r\n    pagination = true;\r\n    header = true;\r\n    title = true;\r\n    footer = true;\r\n    fixHeader = false;\r\n    size = 'small';\r\n    expandable = true;\r\n    checkbox = true;\r\n    allChecked = false;\r\n    indeterminate = false;\r\n    displayData = [];\r\n    simple = false;\r\n    noResult = false;\r\n\r\n    currentPageDataChange($event: Array<{ name: string; age: number; address: string; checked: boolean; expand: boolean; description: string; }>): void {\r\n        this.displayData = $event;\r\n        this.refreshStatus();\r\n    }\r\n\r\n    refreshStatus(): void {\r\n        const validData = this.displayData.filter(value => !value.disabled);\r\n        const allChecked = validData.length > 0 && validData.every(value => value.checked === true);\r\n        const allUnChecked = validData.every(value => !value.checked);\r\n        this.allChecked = allChecked;\r\n        this.indeterminate = (!allChecked) && (!allUnChecked);\r\n    }\r\n\r\n    checkAll(value: boolean): void {\r\n        this.displayData.forEach(data => {\r\n            if (!data.disabled) {\r\n                data.checked = value;\r\n            }\r\n        });\r\n        this.refreshStatus();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        for (let i = 1; i <= 20; i++) {\r\n            this.dataSet.push({\r\n                name       : 'John Brown',\r\n                age        : `${i}2`,\r\n                address    : `New York No. ${i} Lake Park`,\r\n                description: `My name is John Brown, I am ${i}2 years old, living in New York No. ${i} Lake Park.`,\r\n                checked    : false,\r\n                expand     : false\r\n            });\r\n        }\r\n    }\r\n\r\n    noResultChange(status: boolean): void {\r\n        this.dataSet = [];\r\n        if (!status) {\r\n            this.ngOnInit();\r\n        }\r\n    }\r\n}"
}