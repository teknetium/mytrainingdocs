{
    "formHorizontalLoginCode" : "import { Component, OnInit } from '@angular\/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular\/forms';\r\n\r\n@Component({\r\n    selector: 'nz-demo-form-horizontal-login',\r\n    template: `\r\n        <form nz-form [nzLayout]=\"'inline'\" [formGroup]=\"validateForm\" (ngSubmit)=\"submitForm()\">\r\n            <nz-form-item>\r\n                <nz-form-control>\r\n                    <nz-input-group [nzPrefix]=\"prefixUser\">\r\n                        <input formControlName=\"userName\" nz-input placeholder=\"Username\" \/>\r\n                    <\/nz-input-group>\r\n                    <nz-form-explain *ngIf=\"validateForm.get('userName')?.dirty && validateForm.get('userName')?.errors\">\r\n                        Please input your username!\r\n                    <\/nz-form-explain>\r\n                <\/nz-form-control>\r\n            <\/nz-form-item>\r\n            <nz-form-item>\r\n                <nz-form-control>\r\n                    <nz-input-group [nzPrefix]=\"prefixLock\">\r\n                        <input formControlName=\"password\" nz-input type=\"password\" placeholder=\"Password\" \/>\r\n                    <\/nz-input-group>\r\n                    <nz-form-explain *ngIf=\"validateForm.get('password')?.dirty && validateForm.get('password')?.errors\">\r\n                        Please input your Password!\r\n                    <\/nz-form-explain>\r\n                <\/nz-form-control>\r\n            <\/nz-form-item>\r\n            <nz-form-item>\r\n                <nz-form-control>\r\n                    <button nz-button nzType=\"primary\" [disabled]=\"!validateForm.valid\">Log in<\/button>\r\n                <\/nz-form-control>\r\n            <\/nz-form-item>\r\n        <\/form>\r\n        <ng-template #prefixUser><i nz-icon nzType=\"user\"><\/i><\/ng-template>\r\n        <ng-template #prefixLock><i nz-icon nzType=\"lock\"><\/i><\/ng-template>\r\n  `\r\n})\r\nexport class NzDemoFormHorizontalLoginComponent implements OnInit {\r\n    validateForm: FormGroup;\r\n\r\n    submitForm(): void {\r\n        for (const i in this.validateForm.controls) {\r\n            this.validateForm.controls[i].markAsDirty();\r\n            this.validateForm.controls[i].updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n    ngOnInit(): void {\r\n        this.validateForm = this.fb.group({\r\n            userName: [null, [Validators.required]],\r\n            password: [null, [Validators.required]],\r\n            remember: [true]\r\n        });\r\n    }\r\n}",
    "formNormalLoginCode" : "import { Component, OnInit } from '@angular\/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular\/forms';\r\n\r\n@Component({\r\n    selector: 'nz-demo-form-normal-login',\r\n    template: `\r\n        <form nz-form [formGroup]=\"validateForm\" class=\"login-form\" (ngSubmit)=\"submitForm()\">\r\n            <nz-form-item>\r\n                <nz-form-control>\r\n                    <nz-input-group [nzPrefix]=\"prefixUser\">\r\n                        <input type=\"text\" nz-input formControlName=\"userName\" placeholder=\"Username\" \/>\r\n                    <\/nz-input-group>\r\n                    <nz-form-explain *ngIf=\"validateForm.get('userName')?.dirty && validateForm.get('userName')?.errors\">\r\n                        Please input your username!\r\n                    <\/nz-form-explain>\r\n                <\/nz-form-control>\r\n            <\/nz-form-item>\r\n            <nz-form-item>\r\n                <nz-form-control>\r\n                    <nz-input-group [nzPrefix]=\"prefixLock\">\r\n                        <input type=\"password\" nz-input formControlName=\"password\" placeholder=\"Password\" \/>\r\n                    <\/nz-input-group>\r\n                    <nz-form-explain *ngIf=\"validateForm.get('password')?.dirty && validateForm.get('password')?.errors\">\r\n                        Please input your Password!\r\n                    <\/nz-form-explain>\r\n                <\/nz-form-control>\r\n            <\/nz-form-item>\r\n            <nz-form-item>\r\n                <nz-form-control>\r\n                    <label nz-checkbox formControlName=\"remember\">\r\n                        <span>Remember me<\/span>\r\n                    <\/label>\r\n                    <a class=\"login-form-forgot\" class=\"login-form-forgot\">Forgot password<\/a>\r\n                    <button nz-button class=\"login-form-button\" [nzType]=\"'primary'\">Log in<\/button>\r\n                    Or\r\n                    <a href=\"\">register now!<\/a>\r\n                <\/nz-form-control>\r\n            <\/nz-form-item>\r\n        <\/form>\r\n        <ng-template #prefixUser><i nz-icon nzType=\"user\"><\/i><\/ng-template>\r\n        <ng-template #prefixLock><i nz-icon nzType=\"lock\"><\/i><\/ng-template>\r\n    `,\r\n    styles: [\r\n        `\r\n        .login-form {\r\n            max-width: 300px;\r\n        }\r\n\r\n        .login-form-forgot {\r\n            float: right;\r\n        }\r\n\r\n        .login-form-button {\r\n            width: 100%;\r\n        }\r\n        `\r\n    ]\r\n})\r\nexport class NzDemoFormNormalLoginComponent implements OnInit {\r\n    validateForm: FormGroup;\r\n\r\n    submitForm(): void {\r\n        for (const i in this.validateForm.controls) {\r\n            this.validateForm.controls[i].markAsDirty();\r\n            this.validateForm.controls[i].updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    constructor(private fb: FormBuilder) {}\r\n\r\n    ngOnInit(): void {\r\n        this.validateForm = this.fb.group({\r\n            userName: [null, [Validators.required]],\r\n            password: [null, [Validators.required]],\r\n            remember: [true]\r\n        });\r\n    }\r\n}",
    "formRegisterCode" : "import { Component, OnInit } from '@angular\/core';\r\nimport {\r\n    FormBuilder,\r\n    FormControl,\r\n    FormGroup,\r\n    Validators\r\n} from '@angular\/forms';\r\n    \r\n@Component({\r\n    selector: 'nz-demo-form-register',\r\n    template: `\r\n    <form nz-form class=\"register-form\" [formGroup]=\"validateForm\" (ngSubmit)=\"submitForm()\">\r\n        <nz-form-item>\r\n            <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzRequired nzFor=\"email\">E-mail<\/nz-form-label>\r\n            <nz-form-control [nzSm]=\"14\" [nzXs]=\"24\">\r\n                <input nz-input formControlName=\"email\" id=\"email\">\r\n                <nz-form-explain *ngIf=\"validateForm.get('email').dirty && validateForm.get('email').errors\">The input is not valid E-mail!<\/nz-form-explain>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n        <nz-form-item>\r\n            <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzFor=\"password\" nzRequired>Password<\/nz-form-label>\r\n            <nz-form-control [nzSm]=\"14\" [nzXs]=\"24\">\r\n                <input nz-input type=\"password\" id=\"password\" formControlName=\"password\" (ngModelChange)=\"updateConfirmValidator()\">\r\n                <nz-form-explain *ngIf=\"validateForm.get('password').dirty && validateForm.get('password').errors\">Please input your password!<\/nz-form-explain>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n        <nz-form-item>\r\n            <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzFor=\"checkPassword\" nzRequired>Confirm Password<\/nz-form-label>\r\n            <nz-form-control [nzSm]=\"14\" [nzXs]=\"24\">\r\n                <input nz-input type=\"password\" formControlName=\"checkPassword\" id=\"checkPassword\">\r\n                <nz-form-explain *ngIf=\"validateForm.get('checkPassword').dirty && validateForm.get('checkPassword').errors\">\r\n                    <ng-container *ngIf=\"validateForm.get('checkPassword').hasError('required')\">\r\n                        Please confirm your password!\r\n                    <\/ng-container>\r\n                    <ng-container *ngIf=\"validateForm.get('checkPassword').hasError('confirm')\">\r\n                        Two passwords that you enter is inconsistent!\r\n                    <\/ng-container>\r\n                <\/nz-form-explain>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n        <nz-form-item>\r\n            <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzFor=\"nickname\" nzRequired>\r\n                <span>\r\n                    Nickname\r\n                    <i\r\n                        nz-icon\r\n                        nz-tooltip\r\n                        nzTitle=\"What do you want other to call you\"\r\n                        nzType=\"question-circle\"\r\n                        nzTheme=\"outline\"\r\n                    ><\/i>\r\n                <\/span>\r\n            <\/nz-form-label>\r\n            <nz-form-control [nzSm]=\"14\" [nzXs]=\"24\">\r\n                <input nz-input id=\"nickname\" formControlName=\"nickname\">\r\n                <nz-form-explain *ngIf=\"validateForm.get('nickname').dirty && validateForm.get('nickname').errors\">Please input your nickname!<\/nz-form-explain>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n        <nz-form-item>\r\n            <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzFor=\"phoneNumber\" nzRequired>Phone Number<\/nz-form-label>\r\n            <nz-form-control [nzSm]=\"14\" [nzXs]=\"24\" [nzValidateStatus]=\"validateForm.controls['phoneNumber']\">\r\n                <nz-input-group [nzAddOnBefore]=\"addOnBeforeTemplate\">\r\n                    <ng-template #addOnBeforeTemplate>\r\n                        <nz-select formControlName=\"phoneNumberPrefix\" style=\"width: 70px;\">\r\n                        <nz-option nzLabel=\"+86\" nzValue=\"+86\"><\/nz-option>\r\n                        <nz-option nzLabel=\"+87\" nzValue=\"+87\"><\/nz-option>\r\n                        <\/nz-select>\r\n                    <\/ng-template>\r\n                    <input formControlName=\"phoneNumber\" id=\"'phoneNumber'\" nz-input>\r\n                <\/nz-input-group>\r\n                <nz-form-explain *ngIf=\"validateForm.get('phoneNumber').dirty && validateForm.get('phoneNumber').errors\">Please input your phone number!<\/nz-form-explain>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n        <nz-form-item>\r\n            <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzFor=\"website\" nzRequired>Website<\/nz-form-label>\r\n            <nz-form-control [nzSm]=\"14\" [nzXs]=\"24\">\r\n                <input nz-input id=\"website\" formControlName=\"website\" placeholder=\"website\">\r\n                <nz-form-explain *ngIf=\"validateForm.get('website').dirty && validateForm.get('website').errors\">Please input website!<\/nz-form-explain>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n        <nz-form-item>\r\n            <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzFor=\"captcha\" nzRequired>Captcha<\/nz-form-label>\r\n            <nz-form-control [nzSm]=\"14\" [nzXs]=\"24\">\r\n                <div nz-row [nzGutter]=\"8\">\r\n                    <div nz-col [nzSpan]=\"12\">\r\n                        <input nz-input formControlName=\"captcha\" id=\"captcha\">\r\n                    <\/div>\r\n                    <div nz-col [nzSpan]=\"12\">\r\n                        <button nz-button (click)=\"getCaptcha($event)\">Get captcha<\/button>\r\n                    <\/div>\r\n                <\/div>\r\n                <nz-form-explain *ngIf=\"validateForm.get('captcha').dirty && validateForm.get('captcha').errors\">Please input the captcha you got!<\/nz-form-explain>\r\n                <nz-form-extra>We must make sure that your are a human.<\/nz-form-extra>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n        <nz-form-item nz-row style=\"margin-bottom:8px;\">\r\n            <nz-form-control [nzSpan]=\"14\" [nzOffset]=\"6\">\r\n                <label nz-checkbox formControlName=\"agree\">\r\n                <span>I have read the <a>agreement<\/a><\/span>\r\n                <\/label>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n        <nz-form-item nz-row style=\"margin-bottom:8px;\">\r\n            <nz-form-control [nzSpan]=\"14\" [nzOffset]=\"6\">\r\n                <button nz-button nzType=\"primary\">Register<\/button>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n    <\/form>`,\r\n\r\n    styles: [\r\n        `.register-form {\r\n            max-width: 600px;\r\n        }`\r\n    ]\r\n})\r\nexport class NzDemoFormRegisterComponent implements OnInit {\r\n    validateForm: FormGroup;\r\n\r\n    submitForm(): void {\r\n        for (const i in this.validateForm.controls) {\r\n            this.validateForm.controls[ i ].markAsDirty();\r\n            this.validateForm.controls[ i ].updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    updateConfirmValidator(): void {\r\n        \/** wait for refresh value *\/\r\n        Promise.resolve().then(() => this.validateForm.controls.checkPassword.updateValueAndValidity());\r\n    }\r\n\r\n    confirmationValidator = (control: FormControl): { [s: string]: boolean } => {\r\n        if (!control.value) {\r\n            return { required: true };\r\n        } else if (control.value !== this.validateForm.controls.password.value) {\r\n            return { confirm: true, error: true };\r\n        }\r\n    }\r\n\r\n    getCaptcha(e: MouseEvent): void {\r\n        e.preventDefault();\r\n    }\r\n\r\n    constructor(private fb: FormBuilder) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.validateForm = this.fb.group({\r\n            email            : [ null, [ Validators.email ] ],\r\n            password         : [ null, [ Validators.required ] ],\r\n            checkPassword    : [ null, [ Validators.required, this.confirmationValidator ] ],\r\n            nickname         : [ null, [ Validators.required ] ],\r\n            phoneNumberPrefix: [ '+86' ],\r\n            phoneNumber      : [ null, [ Validators.required ] ],\r\n            website          : [ null, [ Validators.required ] ],\r\n            captcha          : [ null, [ Validators.required ] ],\r\n            agree            : [ false ]\r\n        });\r\n    }\r\n}",
    "formAdvancedSearchCode" : "import { Component, OnInit } from '@angular\/core';\r\nimport {\r\n    FormBuilder,\r\n    FormControl,\r\n    FormGroup\r\n} from '@angular\/forms';\r\n\r\n@Component({\r\n    selector: 'nz-demo-form-advanced-search',\r\n    template: `\r\n        <form nz-form [formGroup]=\"validateForm\">\r\n            <div nz-row [nzGutter]=\"24\">\r\n                <div nz-col [nzSpan]=\"8\" *ngFor=\"let control of controlArray\" [style.display]=\"control.show?'block':'none'\">\r\n                <nz-form-item nzFlex>\r\n                    <nz-form-label [nzFor]=\"'field'+control.index\">Field {{control.index}}<\/nz-form-label>\r\n                    <nz-form-control>\r\n                        <input nz-input placeholder=\"placeholder\" [formControlName]=\"'field'+control.index\" [attr.id]=\"'field'+control.index\">\r\n                    <\/nz-form-control>\r\n                <\/nz-form-item>\r\n                <\/div>\r\n            <\/div>\r\n            <div nz-row>\r\n                <div nz-col [nzSpan]=\"24\" style=\"text-align: right;\">\r\n                    <button nz-button class=\"m-r-10\" [nzType]=\"'primary'\">Search<\/button>\r\n                    <button nz-button class=\"m-r-10\" (click)=\"resetForm()\">Clear<\/button>\r\n                    <a (click)=\"toggleCollapse()\">\r\n                        Collapse\r\n                        <i nz-icon [nzType]=\"isCollapse?'down':'up'\"><\/i>\r\n                    <\/a>\r\n                <\/div>\r\n            <\/div>\r\n        <\/form>\r\n        <div class=\"text-center bg-gray-lightest p-v-50 border-radius-4 m-t-30 border\">\r\n            Search Result List\r\n        <\/div>\r\n    `\r\n})\r\nexport class NzDemoFormAdvancedSearchComponent implements OnInit {\r\n    validateForm: FormGroup;\r\n    controlArray = [];\r\n    isCollapse = true;\r\n\r\n    toggleCollapse(): void {\r\n        this.isCollapse = !this.isCollapse;\r\n        this.controlArray.forEach((c, index) => {\r\n            c.show = this.isCollapse ? (index < 6) : true;\r\n        });\r\n    }\r\n\r\n    resetForm(): void {\r\n        this.validateForm.reset();\r\n    }\r\n\r\n    constructor(private fb: FormBuilder) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.validateForm = this.fb.group({});\r\n        for (let i = 0; i < 10; i++) {\r\n            this.controlArray.push({ index: i, show: i < 6 });\r\n            this.validateForm.addControl(`field${i}`, new FormControl());\r\n        }\r\n    }\r\n}",
    "formDynamicCode" : "import { Component, OnInit } from '@angular\/core';\r\nimport {\r\n    AbstractControl,\r\n    FormBuilder,\r\n    FormControl,\r\n    FormGroup,\r\n    Validators\r\n} from '@angular\/forms';\r\n\r\n@Component({\r\n    selector: 'nz-demo-form-dynamic-form-item',\r\n    template: `\r\n        <form nz-form [formGroup]=\"validateForm\" (ngSubmit)=\"submitForm()\" style=\"max-width: 600px;\">\r\n            <nz-form-item *ngFor=\"let control of controlArray;let i = index\">\r\n                <nz-form-label [nzXs]=\"24\" [nzSm]=\"4\" *ngIf=\"i==0\" [nzFor]=\"control.controlInstance\">Passengers<\/nz-form-label>\r\n                <nz-form-control [nzXs]=\"24\" [nzSm]=\"20\" [nzOffset]=\"i==0?0:4\">\r\n                    <input nz-input style=\"width: 60%; margin-right:8px;\" placeholder=\"placeholder\" [attr.id]=\"control.id\" [formControlName]=\"control.controlInstance\">\r\n                    <a (click)=\"removeField(control,$event)\">\r\n                        <i nz-icon nzType=\"minus-circle-o\"><\/i>\r\n                    <\/a>\r\n                    <nz-form-explain *ngIf=\"getFormControl(control.controlInstance)?.dirty&&getFormControl(control.controlInstance)?.hasError('required')\">\r\n                        Please input passenger's name or delete this field.\r\n                    <\/nz-form-explain>\r\n                <\/nz-form-control>\r\n            <\/nz-form-item>\r\n            <nz-form-item>\r\n                <nz-form-control [nzXs]=\"{span:24,offset:0}\" [nzSm]=\"{span:20,offset:4}\">\r\n                    <button nz-button nzType=\"dashed\" style=\"width:60%\" (click)=\"addField($event)\"><i nz-icon nzType=\"plus\"><\/i> Add field<\/button>\r\n                <\/nz-form-control>\r\n            <\/nz-form-item>\r\n            <nz-form-item>\r\n                <nz-form-control [nzXs]=\"{span:24,offset:0}\" [nzSm]=\"{span:20,offset:4}\">\r\n                    <button nz-button nzType=\"primary\">Submit<\/button>\r\n                <\/nz-form-control>\r\n            <\/nz-form-item>\r\n        <\/form>\r\n    `\r\n})\r\nexport class NzDemoFormDynamicFormItemComponent implements OnInit {\r\n    validateForm: FormGroup;\r\n    controlArray: Array<{ id: number, controlInstance: string }> = [];\r\n\r\n    addField(e?: MouseEvent): void {\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n        const id = (this.controlArray.length > 0) ? this.controlArray[ this.controlArray.length - 1 ].id + 1 : 0;\r\n\r\n        const control = {\r\n            id,\r\n            controlInstance: `passenger${id}`\r\n        };\r\n        const index = this.controlArray.push(control);\r\n        console.log(this.controlArray[ this.controlArray.length - 1 ]);\r\n        this.validateForm.addControl(this.controlArray[ index - 1 ].controlInstance, new FormControl(null, Validators.required));\r\n    }\r\n\r\n    removeField(i: { id: number, controlInstance: string }, e: MouseEvent): void {\r\n        e.preventDefault();\r\n        if (this.controlArray.length > 1) {\r\n            const index = this.controlArray.indexOf(i);\r\n            this.controlArray.splice(index, 1);\r\n            console.log(this.controlArray);\r\n            this.validateForm.removeControl(i.controlInstance);\r\n        }\r\n    }\r\n\r\n    getFormControl(name: string): AbstractControl {\r\n        return this.validateForm.controls[ name ];\r\n    }\r\n\r\n    submitForm(): void {\r\n        for (const i in this.validateForm.controls) {\r\n            this.validateForm.controls[ i ].markAsDirty();\r\n            this.validateForm.controls[ i ].updateValueAndValidity();\r\n        }\r\n        console.log(this.validateForm.value);\r\n    }\r\n\r\n    constructor(private fb: FormBuilder) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.validateForm = this.fb.group({});\r\n        this.addField();\r\n    }\r\n}",
    "formDateTimeRelatedCode" : "import { Component, OnInit } from '@angular\/core';\r\nimport {\r\n    FormBuilder,\r\n    FormGroup,\r\n    Validators\r\n} from '@angular\/forms';\r\n\r\n@Component({\r\n    selector: 'nz-demo-form-time-related-controls',\r\n    template: `\r\n    <form nz-form [formGroup]=\"validateForm\" (ngSubmit)=\"submitForm()\">\r\n        <nz-form-item>\r\n            <nz-form-label [nzSm]=\"8\" [nzXs]=\"24\" nzRequired>DatePicker<\/nz-form-label>\r\n            <nz-form-control [nzSm]=\"16\" [nzXs]=\"24\">\r\n                <nz-date-picker formControlName=\"datePicker\"><\/nz-date-picker>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n        <nz-form-item>\r\n            <nz-form-label [nzSm]=\"8\" [nzXs]=\"24\" nzRequired>DatePicker[ShowTime]<\/nz-form-label>\r\n            <nz-form-control [nzSm]=\"16\" [nzXs]=\"24\">\r\n                <nz-date-picker nzShowTime formControlName=\"datePickerTime\"><\/nz-date-picker>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n        <nz-form-item>\r\n            <nz-form-label [nzSm]=\"8\" [nzXs]=\"24\" nzRequired>MonthPicker<\/nz-form-label>\r\n            <nz-form-control [nzSm]=\"16\" [nzXs]=\"24\">\r\n                <nz-month-picker formControlName=\"monthPicker\"><\/nz-month-picker>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n        <nz-form-item>\r\n            <nz-form-label [nzSm]=\"8\" [nzXs]=\"24\" nzRequired>RangePicker<\/nz-form-label>\r\n            <nz-form-control [nzSm]=\"16\" [nzXs]=\"24\">\r\n                <nz-range-picker formControlName=\"rangePicker\"><\/nz-range-picker>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n        <nz-form-item>\r\n            <nz-form-label [nzSm]=\"8\" [nzXs]=\"24\" nzRequired>RangePicker[showTime]<\/nz-form-label>\r\n            <nz-form-control [nzSm]=\"16\" [nzXs]=\"24\">\r\n                <nz-range-picker nzShowTime formControlName=\"rangePickerTime\"><\/nz-range-picker>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n        <nz-form-item>\r\n            <nz-form-label [nzSm]=\"8\" [nzXs]=\"24\" nzRequired>TimePicker<\/nz-form-label>\r\n            <nz-form-control [nzSm]=\"16\" [nzXs]=\"24\">\r\n                <nz-time-picker formControlName=\"timePicker\"><\/nz-time-picker>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n        <nz-form-item>\r\n            <nz-form-control [nzXs]=\"{ span: 24, offset: 0 }\" [nzSm]=\"{ span: 16, offset: 8 }\">\r\n                <button nz-button nzType=\"primary\">Submit<\/button>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n    <\/form>`\r\n})\r\nexport class NzDemoFormTimeRelatedControlsComponent implements OnInit {\r\n    validateForm: FormGroup;\r\n\r\n    submitForm(): void {\r\n        console.log(this.validateForm.value);\r\n    }\r\n\r\n    constructor(private fb: FormBuilder) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.validateForm = this.fb.group({\r\n            datePicker     : [ null ],\r\n            datePickerTime : [ null ],\r\n            monthPicker    : [ null ],\r\n            rangePicker    : [ [] ],\r\n            rangePickerTime: [ [] ],\r\n            timePicker     : [ null ]\r\n        });\r\n    }\r\n}",
    "formReactiveCode" : "import { Component } from '@angular\/core';\r\n\r\nimport {\r\n    FormBuilder,\r\n    FormControl,\r\n    FormGroup,\r\n    ValidationErrors,\r\n    Validators\r\n} from '@angular\/forms';\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'nz-demo-form-validate-reactive',\r\n    template: `\r\n        <form nz-form [formGroup]=\"validateForm\" (ngSubmit)=\"submitForm($event,validateForm.value)\" style=\"max-width: 600px\">\r\n            <nz-form-item>\r\n                <nz-form-label [nzSpan]=\"7\" nzRequired>Username<\/nz-form-label>\r\n                <nz-form-control [nzSpan]=\"12\" nzHasFeedback>\r\n                    <input nz-input formControlName=\"userName\" placeholder=\"async validate try to write JasonWood\">\r\n                    <nz-form-explain *ngIf=\"validateForm.get('userName').dirty && validateForm.get('userName').errors || validateForm.get('userName').pending \">\r\n                        <ng-container *ngIf=\"validateForm.get('userName').hasError('required')\">\r\n                            Please input your username!\r\n                        <\/ng-container>\r\n                        <ng-container *ngIf=\"validateForm.get('userName').hasError('duplicated')\">\r\n                            The username is redundant!\r\n                        <\/ng-container>\r\n                        <ng-container *ngIf=\"validateForm.get('userName').pending\">\r\n                            Validating...\r\n                        <\/ng-container>\r\n                    <\/nz-form-explain>\r\n                <\/nz-form-control>\r\n            <\/nz-form-item>\r\n            <nz-form-item>\r\n                <nz-form-label [nzSpan]=\"7\" nzRequired>E-mail<\/nz-form-label>\r\n                <nz-form-control [nzSpan]=\"12\" nzHasFeedback>\r\n                    <input nz-input formControlName=\"email\" placeholder=\"email\" type=\"email\">\r\n                    <nz-form-explain *ngIf=\"validateForm.get('email').dirty&&validateForm.get('email').errors\">\r\n                        <ng-container *ngIf=\"validateForm.get('email').hasError('email')\">\r\n                            The input is not valid E-mail!\r\n                        <\/ng-container>\r\n                        <ng-container *ngIf=\"validateForm.get('email').hasError('required')\">\r\n                            Please input your E-mail!\r\n                        <\/ng-container>\r\n                    <\/nz-form-explain>\r\n                <\/nz-form-control>\r\n            <\/nz-form-item>\r\n            <nz-form-item>\r\n                <nz-form-label [nzSpan]=\"7\" nzRequired>Password<\/nz-form-label>\r\n                <div>\r\n                    <nz-form-control [nzSpan]=\"12\" nzHasFeedback>\r\n                        <input nz-input type=\"password\" formControlName=\"password\" (ngModelChange)=\"validateConfirmPassword()\">\r\n                        <nz-form-explain *ngIf=\"validateForm.get('password').dirty&&validateForm.get('password').hasError('required')\">Please input your password!<\/nz-form-explain>\r\n                    <\/nz-form-control>\r\n                <\/div>\r\n            <\/nz-form-item>\r\n            <nz-form-item>\r\n                <nz-form-label [nzSpan]=\"7\" nzRequired>Confirm Password<\/nz-form-label>\r\n                <nz-form-control [nzSpan]=\"12\" nzHasFeedback>\r\n                    <input nz-input type=\"password\" formControlName=\"confirm\" placeholder=\"confirm your password\">\r\n                    <nz-form-explain *ngIf=\"validateForm.get('confirm').dirty&&validateForm.get('confirm').errors\">\r\n                        <ng-container *ngIf=\"validateForm.get('confirm').hasError('required')\">\r\n                            Please confirm your password!\r\n                        <\/ng-container>\r\n                        <ng-container *ngIf=\"validateForm.get('confirm').hasError('confirm')\">\r\n                            Password is inconsistent!\r\n                        <\/ng-container>\r\n                    <\/nz-form-explain>\r\n                <\/nz-form-control>\r\n            <\/nz-form-item>\r\n            <nz-form-item>\r\n                <nz-form-label [nzSpan]=\"7\" nzRequired>Comment<\/nz-form-label>\r\n                <nz-form-control [nzSpan]=\"12\" >\r\n                    <textarea formControlName=\"comment\" nz-input rows=\"2\" placeholder=\"write any thing\"><\/textarea>\r\n                    <nz-form-explain *ngIf=\"validateForm.get('comment').dirty&&validateForm.get('comment').hasError('required')\">Please write something here!<\/nz-form-explain>\r\n                <\/nz-form-control>\r\n            <\/nz-form-item>\r\n            <nz-form-item>\r\n                <nz-form-control [nzOffset]=\"7\" [nzSpan]=\"12\">\r\n                    <button class=\"m-r-10\" nz-button nzType=\"primary\" [disabled]=\"!validateForm.valid\">Submit<\/button>\r\n                    <button nz-button (click)=\"resetForm($event)\">Reset<\/button>\r\n                <\/nz-form-control>\r\n            <\/nz-form-item>\r\n        <\/form>`,\r\n})\r\nexport class NzDemoFormValidateReactiveComponent {\r\n    validateForm: FormGroup;\r\n    submitForm = ($event, value) => {\r\n        $event.preventDefault();\r\n        for (const key in this.validateForm.controls) {\r\n            this.validateForm.controls[ key ].markAsDirty();\r\n            this.validateForm.controls[ key ].updateValueAndValidity();\r\n        }\r\n        console.log(value);\r\n    };\r\n\r\n    resetForm(e: MouseEvent): void {\r\n        e.preventDefault();\r\n        this.validateForm.reset();\r\n        for (const key in this.validateForm.controls) {\r\n            this.validateForm.controls[ key ].markAsPristine();\r\n            this.validateForm.controls[ key ].updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    validateConfirmPassword(): void {\r\n        setTimeout(() => this.validateForm.controls.confirm.updateValueAndValidity());\r\n    }\r\n\r\n    userNameAsyncValidator = (control: FormControl) => Observable.create((observer: Observer<ValidationErrors>) => {\r\n        setTimeout(() => {\r\n            if (control.value === 'JasonWood') {\r\n                observer.next({ error: true, duplicated: true });\r\n            } else {\r\n                observer.next(null);\r\n            }\r\n                observer.complete();\r\n        }, 1000);\r\n    });\r\n\r\n    confirmValidator = (control: FormControl): { [ s: string ]: boolean } => {\r\n        if (!control.value) {\r\n            return { required: true };\r\n        } else if (control.value !== this.validateForm.controls.password.value) {\r\n            return { confirm: true, error: true };\r\n        }\r\n    };\r\n\r\n    constructor(private fb: FormBuilder) {\r\n        this.validateForm = this.fb.group({\r\n            userName: [ '', [ Validators.required ], [ this.userNameAsyncValidator ] ],\r\n            email   : [ '', [ Validators.email ] ],\r\n            password: [ '', [ Validators.required ] ],\r\n            confirm : [ '', [ this.confirmValidator ] ],\r\n            comment : [ '', [ Validators.required ] ]\r\n        });\r\n    }\r\n}",
    "formTemplateDrivenValidationCode" : "<form nz-form style=\"max-width: 600px;\">\r\n    <nz-form-item>\r\n        <nz-form-label [nzSpan]=\"5\">Fail<\/nz-form-label>\r\n        <nz-form-control nzValidateStatus=\"error\" [nzSpan]=\"12\">\r\n            <input nz-input [ngModel]=\"'unavailable choice'\" name=\"errorValid\">\r\n            <nz-form-explain>Should be combination of numbers & alphabets<\/nz-form-explain>\r\n        <\/nz-form-control>\r\n    <\/nz-form-item>\r\n    <nz-form-item>\r\n        <nz-form-label [nzSpan]=\"5\">Warning<\/nz-form-label>\r\n        <nz-form-control nzValidateStatus=\"warning\" [nzSpan]=\"12\">\r\n            <input nz-input [ngModel]=\"'Warning'\" name=\"warningValid\">\r\n        <\/nz-form-control>\r\n    <\/nz-form-item>\r\n    <nz-form-item>\r\n        <nz-form-label [nzSpan]=\"5\">Validating<\/nz-form-label>\r\n        <nz-form-control [nzSpan]=\"12\" nzValidateStatus=\"validating\" nzHasFeedback>\r\n            <input nz-input [ngModel]=\"'The content is being validating'\" name=\"validating\">\r\n            <nz-form-explain>I'm the content is being validating<\/nz-form-explain>\r\n        <\/nz-form-control>\r\n    <\/nz-form-item>\r\n    <nz-form-item>\r\n        <nz-form-label [nzSpan]=\"5\">Success<\/nz-form-label>\r\n        <nz-form-control [nzSpan]=\"12\" nzValidateStatus=\"success\" nzHasFeedback>\r\n            <input nz-input [ngModel]=\"'The content'\" name=\"successValid\">\r\n        <\/nz-form-control>\r\n    <\/nz-form-item>\r\n    <nz-form-item>\r\n        <nz-form-label [nzSpan]=\"5\">Warning<\/nz-form-label>\r\n        <nz-form-control [nzSpan]=\"12\" nzValidateStatus=\"warning\" nzHasFeedback>\r\n            <input nz-input [ngModel]=\"'Warning'\" name=\"warningHighValid\">\r\n            <nz-form-explain>Should be combination of numbers & alphabets<\/nz-form-explain>\r\n        <\/nz-form-control>\r\n    <\/nz-form-item>\r\n    <nz-form-item>\r\n        <nz-form-label [nzSpan]=\"5\">Fail<\/nz-form-label>\r\n        <nz-form-control [nzSpan]=\"12\" nzValidateStatus=\"error\" nzHasFeedback>\r\n            <input nz-input [ngModel]=\"'unavailable choice'\" name=\"invalidValid\">\r\n            <nz-form-explain>Should be combination of numbers & alphabets<\/nz-form-explain>\r\n        <\/nz-form-control>\r\n    <\/nz-form-item>\r\n    <nz-form-item>\r\n        <nz-form-label [nzSpan]=\"5\">Success<\/nz-form-label>\r\n        <nz-form-control [nzSpan]=\"12\" nzValidateStatus=\"success\" nzHasFeedback>\r\n            <nz-date-picker name=\"date-picker-success\" class=\"w-100\"><\/nz-date-picker>\r\n        <\/nz-form-control>\r\n    <\/nz-form-item>\r\n    <nz-form-item>\r\n        <nz-form-label [nzSpan]=\"5\">Warning<\/nz-form-label>\r\n        <nz-form-control [nzSpan]=\"12\" nzValidateStatus=\"warning\" nzHasFeedback>\r\n            <nz-time-picker name=\"time-picker-warning\" style=\"width: 100%\"><\/nz-time-picker>\r\n        <\/nz-form-control>\r\n    <\/nz-form-item>\r\n    <nz-form-item>\r\n        <nz-form-label [nzSpan]=\"5\">Error<\/nz-form-label>\r\n        <nz-form-control [nzSpan]=\"12\" nzValidateStatus=\"error\" nzHasFeedback>\r\n            <nz-select name=\"select-error\" [ngModel]=\"'Option 1'\">\r\n                <nz-option nzValue=\"Option 1\" nzLabel=\"Option 1\"><\/nz-option>\r\n                <nz-option nzValue=\"Option 2\" nzLabel=\"Option 2\"><\/nz-option>\r\n            <\/nz-select>\r\n        <\/nz-form-control>\r\n    <\/nz-form-item>\r\n    <nz-form-item>\r\n        <nz-form-label [nzSpan]=\"5\">Validating<\/nz-form-label>\r\n        <nz-form-control [nzSpan]=\"12\" nzValidateStatus=\"validating\" nzHasFeedback>\r\n            <nz-select name=\"select-validate\" [ngModel]=\"'Option 2'\">\r\n                <nz-option nzValue=\"Option 1\" nzLabel=\"Option 1\"><\/nz-option>\r\n                <nz-option nzValue=\"Option 2\" nzLabel=\"Option 2\"><\/nz-option>\r\n            <\/nz-select>\r\n        <\/nz-form-control>\r\n    <\/nz-form-item>\r\n    <nz-form-item>\r\n        <nz-form-label [nzSpan]=\"5\">Success<\/nz-form-label>\r\n        <nz-form-control [nzSpan]=\"12\" nzValidateStatus=\"success\" nzHasFeedback>\r\n            <nz-input-number name=\"inputnumber-success\" style=\"width:100%\"><\/nz-input-number>\r\n        <\/nz-form-control>\r\n    <\/nz-form-item>\r\n<\/form>",
    "formCoordinatedCode" : "import { Component, OnInit } from '@angular\/core';\r\nimport {\r\n    AbstractControl,\r\n    FormBuilder,\r\n    FormGroup,\r\n    Validators\r\n} from '@angular\/forms';\r\n\r\n@Component({\r\n    selector: 'nz-demo-form-coordinated',\r\n    template: `\r\n    <form nz-form [formGroup]=\"validateForm\" (ngSubmit)=\"submitForm()\" style=\"max-width: 600px\">\r\n        <nz-form-item>\r\n            <nz-form-label [nzSpan]=\"5\" nzRequired nzFor=\"note\">Note<\/nz-form-label>\r\n            <nz-form-control [nzSpan]=\"12\">\r\n                <input id=\"note\" type=\"text\" nz-input formControlName=\"note\">\r\n                <nz-form-explain *ngIf=\"validateForm.get('note').dirty && validateForm.get('note').errors\">Please input your username!<\/nz-form-explain>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n        <nz-form-item>\r\n            <nz-form-label [nzSpan]=\"5\" nzFor=\"gender\" nzRequired>Gender<\/nz-form-label>\r\n            <nz-form-control [nzSpan]=\"12\">\r\n                <nz-select id=\"gender\" formControlName=\"gender\" nzPlaceHolder=\"Select a option and change input text above\" (ngModelChange)=\"genderChange($event)\">\r\n                <nz-option nzValue=\"male\" nzLabel=\"male\"><\/nz-option>\r\n                <nz-option nzValue=\"female\" nzLabel=\"female\"><\/nz-option>\r\n                <\/nz-select>\r\n                <nz-form-explain *ngIf=\"validateForm.get('gender').dirty && validateForm.get('gender').errors\">Please select your gender!<\/nz-form-explain>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n        <nz-form-item>\r\n            <nz-form-control [nzSpan]=\"12\" [nzOffset]=\"5\">\r\n                <button nz-button nzType=\"primary\">Submit<\/button>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n    <\/form>\r\n    `,\r\n})\r\nexport class NzDemoFormCoordinatedComponent implements OnInit {\r\n    validateForm: FormGroup;\r\n\r\n    submitForm(): void {\r\n        for (const i in this.validateForm.controls) {\r\n            this.validateForm.controls[ i ].markAsDirty();\r\n            this.validateForm.controls[ i ].updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    genderChange(value: string): void {\r\n        this.validateForm.get('note').setValue(value === 'male' ? 'Hi, man!' : 'Hi, lady!');\r\n    }\r\n\r\n    constructor(private fb: FormBuilder) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.validateForm = this.fb.group({\r\n            note  : [ null, [ Validators.required ] ],\r\n            gender: [ null, [ Validators.required ] ]\r\n        });\r\n    }\r\n}",
    "formLayoutCode" : "import { Component, OnInit } from '@angular\/core';\r\nimport {\r\n    FormBuilder,\r\n    FormGroup,\r\n    Validators\r\n} from '@angular\/forms';\r\n\r\n@Component({\r\n    selector: 'nz-demo-form-layout',\r\n    template: `\r\n        <form nz-form [nzLayout]=\"validateForm.get('formLayout')?.value\" [formGroup]=\"validateForm\" (ngSubmit)=\"submitForm()\">\r\n            <nz-form-item>\r\n                <nz-form-label [nzSpan]=\"isHorizontal? 4:null\">Form Layout<\/nz-form-label>\r\n                <nz-form-control [nzSpan]=\"isHorizontal? 14:null\">\r\n                    <nz-radio-group formControlName=\"formLayout\">\r\n                        <label nz-radio-button [nzValue]=\"'horizontal'\">Horizontal<\/label>\r\n                        <label nz-radio-button [nzValue]=\"'vertical'\">Vertical<\/label>\r\n                        <label nz-radio-button [nzValue]=\"'inline'\">Inline<\/label>\r\n                    <\/nz-radio-group>\r\n                <\/nz-form-control>\r\n            <\/nz-form-item>\r\n            <nz-form-item>\r\n                <nz-form-label [nzSpan]=\"isHorizontal? 4:null\">Field A<\/nz-form-label>\r\n                <nz-form-control [nzSpan]=\"isHorizontal? 14:null\">\r\n                    <input nz-input formControlName=\"fieldA\" placeholder=\"input placeholder\">\r\n                    <nz-form-explain *ngIf=\"validateForm.get('fieldA').dirty && validateForm.get('fieldA').errors\">Please input your username!<\/nz-form-explain>\r\n                <\/nz-form-control>\r\n            <\/nz-form-item>\r\n            <nz-form-item>\r\n                <nz-form-label [nzSpan]=\"isHorizontal? 4:null\">Field B<\/nz-form-label>\r\n                <nz-form-control [nzSpan]=\"isHorizontal? 14:null\">\r\n                    <input nz-input formControlName=\"filedB\" placeholder=\"input placeholder\">\r\n                    <nz-form-explain *ngIf=\"validateForm.get('filedB').dirty && validateForm.get('filedB').errors\">Please input your Password!<\/nz-form-explain>\r\n                <\/nz-form-control>\r\n            <\/nz-form-item>\r\n            <nz-form-item>\r\n                <nz-form-control [nzSpan]=\"isHorizontal? 14:null\" [nzOffset]=\"isHorizontal? 4:null\">\r\n                    <button nz-button nzType=\"primary\">Submit<\/button>\r\n                <\/nz-form-control>\r\n            <\/nz-form-item>\r\n        <\/form>`\r\n})\r\nexport class NzDemoFormLayoutComponent implements OnInit {\r\n    validateForm: FormGroup;\r\n\r\n    submitForm(): void {\r\n        for (const i in this.validateForm.controls) {\r\n            this.validateForm.controls[ i ].markAsDirty();\r\n            this.validateForm.controls[ i ].updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    get isHorizontal(): boolean {\r\n        return this.validateForm.controls.formLayout && this.validateForm.controls.formLayout.value === 'horizontal';\r\n    }\r\n\r\n    constructor(private fb: FormBuilder) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.validateForm = this.fb.group({\r\n            formLayout: [ 'horizontal' ],\r\n            fieldA    : [ null, [ Validators.required ] ],\r\n            filedB    : [ null, [ Validators.required ] ]\r\n        });\r\n    }\r\n}",
    "formDynamicRulesCode" : "import { Component, OnInit } from '@angular\/core';\r\nimport {\r\n    FormBuilder,\r\n    FormGroup,\r\n    Validators\r\n} from '@angular\/forms';\r\n\r\n@Component({\r\n    selector: 'nz-demo-form-dynamic-rule',\r\n    template: `\r\n    <form nz-form [formGroup]=\"validateForm\" (ngSubmit)=\"submitForm()\">\r\n        <nz-form-item>\r\n            <nz-form-label [nzSpan]=\"4\" nzRequired nzFor=\"name\">Name<\/nz-form-label>\r\n            <nz-form-control [nzSpan]=\"8\">\r\n                <input type=\"text\" nz-input formControlName=\"name\" placeholder=\"Please input your name\">\r\n                <nz-form-explain *ngIf=\"validateForm.get('name').dirty && validateForm.get('name').errors\">Please input your name<\/nz-form-explain>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n        <nz-form-item>\r\n            <nz-form-label [nzSpan]=\"4\" nzFor=\"nickname\" [nzRequired]=\"validateForm.get('required')?.value\">Nickname<\/nz-form-label>\r\n            <nz-form-control [nzSpan]=\"8\">\r\n                <input type=\"text\" nz-input formControlName=\"nickname\" placeholder=\"Please input your nickname\">\r\n                <nz-form-explain *ngIf=\"validateForm.get('nickname').dirty && validateForm.get('nickname').errors\">Please input your nickname<\/nz-form-explain>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n        <nz-form-item>\r\n            <nz-form-control [nzSpan]=\"8\" [nzOffset]=\"4\">\r\n                <label nz-checkbox formControlName=\"required\" (ngModelChange)=\"requiredChange($event)\">Nickname is required<\/label>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n        <nz-form-item>\r\n            <nz-form-control [nzSpan]=\"8\" [nzOffset]=\"4\">\r\n                <button nz-button nzType=\"primary\">Check<\/button>\r\n            <\/nz-form-control>\r\n        <\/nz-form-item>\r\n    <\/form>\r\n    `\r\n})\r\nexport class NzDemoFormDynamicRuleComponent implements OnInit {\r\n    validateForm: FormGroup;\r\n\r\n    submitForm(): void {\r\n        for (const i in this.validateForm.controls) {\r\n            this.validateForm.controls[ i ].markAsDirty();\r\n            this.validateForm.controls[ i ].updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    requiredChange(required: boolean): void {\r\n        if (!required) {\r\n            this.validateForm.get('nickname').clearValidators();\r\n            this.validateForm.get('nickname').markAsPristine();\r\n        } else {\r\n            this.validateForm.get('nickname').setValidators(Validators.required);\r\n            this.validateForm.get('nickname').markAsDirty();\r\n        }\r\n        this.validateForm.get('nickname').updateValueAndValidity();\r\n    }\r\n\r\n    constructor(private fb: FormBuilder) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.validateForm = this.fb.group({\r\n            name    : [ null, [ Validators.required ] ],\r\n            nickname: [ null ],\r\n            required: [ false ]\r\n        });\r\n    }\r\n}"
}