{
    "autocompleteBasicCode" : "import { Component, ViewEncapsulation } from '@angular\/core';\r\n\r\n@Component({\r\n    selector     : 'nz-demo-auto-complete-basic',\r\n    encapsulation: ViewEncapsulation.None,\r\n    template     : `\r\n        <input placeholder=\"input here\" nz-input [(ngModel)]=\"inputValue\" (input)=\"onInput($event.target?.value)\" [nzAutocomplete]=\"auto\">\r\n        <nz-autocomplete nzBackfill #auto>\r\n            <nz-auto-option *ngFor=\"let option of options\" [nzValue]=\"option\">\r\n                {{option}}\r\n            <\/nz-auto-option>\r\n        <\/nz-autocomplete>\r\n    `\r\n})\r\nexport class NzDemoAutoCompleteBasicComponent {\r\n    inputValue: string;\r\n    options = [];\r\n    \r\n    onInput(value: string): void {\r\n        this.options = value ? [\r\n            value,\r\n            value + value,\r\n            value + value + value\r\n        ] : [];\r\n    }\r\n}",
    "autocompleteCustomizedCode" : "import { Component, ViewEncapsulation } from '@angular\/core';\r\n\r\n@Component({\r\n    selector     : 'nz-demo-auto-complete-options',\r\n    encapsulation: ViewEncapsulation.None,\r\n    template     : `\r\n        <input placeholder=\"input here\" nz-input [(ngModel)]=\"inputValue\" (ngModelChange)=\"onChange($event)\" [nzAutocomplete]=\"auto\">\r\n        <nz-autocomplete #auto>\r\n            <nz-auto-option *ngFor=\"let option of options\" [nzValue]=\"option\">{{option}}<\/nz-auto-option>\r\n        <\/nz-autocomplete>\r\n    `\r\n})\r\nexport class NzDemoAutoCompleteOptionsComponent {\r\n    inputValue: string;\r\n    options = [];\r\n    \r\n    onChange(value: string): void {\r\n        if (!value || value.indexOf('@') >= 0) {\r\n            this.options = [];\r\n        } else {\r\n            this.options = ['gmail.com', '163.com', 'qq.com'].map(domain => `${value}@${domain}`);\r\n        }\r\n    }\r\n}",
    "autocompleteCustomizeInputCode" : "import { Component, ViewEncapsulation } from '@angular\/core';\r\n\r\n@Component({\r\n    selector     : 'nz-demo-auto-complete-custom',\r\n    encapsulation: ViewEncapsulation.None,\r\n    template     : `   \r\n        <textarea placeholder=\"input here\" nz-input row=\"4\"  [(ngModel)]=\"inputValue\" (input)=\"onInput($event.target?.value)\" [nzAutocomplete]=\"auto\"><\/textarea>\r\n        <nz-autocomplete #auto>\r\n            <nz-auto-option *ngFor=\"let option of options\" [nzValue]=\"option\">{{option}}<\/nz-auto-option>\r\n        <\/nz-autocomplete>\r\n    `\r\n})\r\nexport class NzDemoAutoCompleteCustomComponent {\r\n    inputValue: string;\r\n    options = [];\r\n    \r\n    onInput(value: string): void {\r\n        this.options = value ? [\r\n            value,\r\n            value + value,\r\n            value + value + value,\r\n        ] : [];\r\n    }\r\n}",
    "autocompleteNoneCaseSensitiveCode" : "import { Component, ViewEncapsulation } from '@angular\/core';\r\n\r\n@Component({\r\n    selector     : 'nz-demo-auto-complete-non-case-sensitive',\r\n    encapsulation: ViewEncapsulation.None,\r\n    template     : `\r\n        <input placeholder=\"try to type `b`\" nz-input [(ngModel)]=\"inputValue\" (input)=\"onInput($event.target?.value)\" [nzAutocomplete]=\"auto\">\r\n        <nz-autocomplete [nzDataSource]=\"filteredOptions\" #auto>\r\n        <\/nz-autocomplete>\r\n`\r\n})\r\nexport class NzDemoAutoCompleteNonCaseSensitiveComponent {\r\n    inputValue: string;\r\n    filteredOptions = [];\r\n    options = ['Burns Bay Road', 'Downing Street', 'Wall Street'];\r\n    \r\n    constructor() {\r\n        this.filteredOptions = this.options;\r\n    }\r\n    \r\n    onInput(value: string): void {\r\n        this.filteredOptions = this.options\r\n        .filter(option => option.toLowerCase().indexOf(value.toLowerCase()) === 0);\r\n    }\r\n}",
    "autocompleteUncertainCatCode" : "import { Component, ViewEncapsulation } from '@angular\/core';\r\n\r\n@Component({\r\n    selector     : 'nz-demo-auto-complete-uncertain-category',\r\n    encapsulation: ViewEncapsulation.None,\r\n    template     : `\r\n        <nz-input-group nzSearch [nzSuffix]=\"suffixIconButton\">\r\n            <input placeholder=\"input here\" nz-input [(ngModel)]=\"inputValue\" (ngModelChange)=\"onChange($event)\" [nzAutocomplete]=\"auto\"\/>\r\n        <\/nz-input-group>\r\n        <ng-template #suffixIconButton>\r\n            <button nz-button nzType=\"primary\" nzSearch><i nz-icon nzType=\"search\" theme=\"outline\"><\/i><\/button>\r\n        <\/ng-template>\r\n        <nz-autocomplete #auto>\r\n            <nz-auto-option *ngFor=\"let option of options\" [nzValue]=\"option.category\">\r\n                {{option.value}} in\r\n                <a [href]=\"'https:\/\/alibaba.com\/trade\/search?q=' + option.query\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\">\r\n                    {{option.category}}\r\n                <\/a>\r\n                Category\r\n                <span class=\"global-search-item-count\"><span class=\"text-dark font-weight-semibold\">{{option.count}}<\/span> results<\/span>\r\n            <\/nz-auto-option>\r\n        <\/nz-autocomplete>\r\n    `,\r\n    styles: [`\r\n        .global-search-item-count {\r\n            position: absolute;\r\n            right: 16px;\r\n        }\r\n    `]\r\n})\r\nexport class NzDemoAutoCompleteUncertainCategoryComponent {\r\n    inputValue: string;\r\n    options = [];\r\n    \r\n    onChange(value: string): void {\r\n        this.options = new Array(this.getRandomInt(15, 5)).join('.').split('.')\r\n        .map((item, idx) => ({\r\n            value,\r\n            category: `${value}${idx}`,\r\n            count: this.getRandomInt(200, 100),\r\n        }));\r\n    }\r\n    \r\n    private getRandomInt(max: number, min: number = 0): number {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n}",
    "autocompleteCertainCatCode" : "import { ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation } from '@angular\/core';\r\n\r\n@Component({\r\n    selector     : 'nz-demo-auto-complete-certain-category',\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    template     : `\r\n        <nz-input-group [nzSuffix]=\"suffixIcon\">\r\n            <input placeholder=\"input here\" nz-input [(ngModel)]=\"inputValue\" (ngModelChange)=\"onChange($event)\" [nzAutocomplete]=\"auto\"\/>\r\n        <\/nz-input-group>\r\n        <ng-template #suffixIcon>\r\n            <i nz-icon nzType=\"search\"><\/i>\r\n        <\/ng-template>\r\n        <nz-autocomplete #auto>\r\n            <nz-auto-optgroup *ngFor=\"let group of optionGroups\" [nzLabel]=\"groupTitle\">\r\n                <ng-template #groupTitle>\r\n                    <span>{{group.title}}\r\n                        <a class=\"more-link\" href=\"https:\/\/www.google.com\/search?q=ng+zorro\" target=\"_blank\">More<\/a>\r\n                    <\/span>\r\n                <\/ng-template>\r\n                <nz-auto-option *ngFor=\"let option of group.children\" [nzLabel]=\"option.title\" [nzValue]=\"option\">\r\n                    {{option.title}}\r\n                    <span class=\"certain-search-item-count\">{{option.count}} Subscribe<\/span>\r\n                <\/nz-auto-option>\r\n            <\/nz-auto-optgroup>\r\n        <\/nz-autocomplete>\r\n    `,\r\n    styles: [`\r\n        .certain-search-item-count {\r\n            position: absolute;\r\n            color: #999;\r\n            right: 16px;\r\n        }\r\n\r\n        .more-link {\r\n            float: right;\r\n        }\r\n    `]\r\n})\r\nexport class NzDemoAutoCompleteCertainCategoryComponent implements OnInit {\r\n    inputValue: string;\r\n    optionGroups: any[];\r\n\r\n    onChange(value: any): void {\r\n        console.log(value);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        setTimeout(() => {\r\n            this.optionGroups = [{\r\n                title: 'Topics',\r\n                children: [{\r\n                    title: 'AntDesign',\r\n                    count: 10000\r\n                },         {\r\n                    title: 'AntDesign UI',\r\n                    count: 10600\r\n                }]\r\n            },{\r\n                title: 'Questions',\r\n                children: [{\r\n                    title: 'AntDesign UI Features',\r\n                    count: 60100\r\n                },         {\r\n                    title: 'What is AntDesign',\r\n                    count: 30010\r\n                }]\r\n            },{\r\n                title: 'Articles',\r\n                children: [{\r\n                    title: 'AntDesign is a design language',\r\n                    count: 100000\r\n                }]\r\n            }];\r\n        }, 1000);\r\n    }\r\n}",
    "autocompleteAPICode" : "<input nz-input [(ngModel)]=\"value\" [nzAutocomplete]=\"auto\">\r\n<nz-autocomplete [nzDataSource]=\"['12345', '23456', '34567']\" #auto><\/nz-autocomplete>",
    "autocompleteAPI2Code" : "<input nz-input [(ngModel)]=\"value\" [nzAutocomplete]=\"auto\">\r\n<nz-autocomplete #auto>\r\n    <nz-auto-option [nzValue]=\"'12345'\">12345<\/nz-auto-option>\r\n    <nz-auto-option [nzValue]=\"'23456'\">23456<\/nz-auto-option>\r\n    <nz-auto-option [nzValue]=\"'34567'\">34567<\/nz-auto-option>\r\n<\/nz-autocomplete>"
}