{
    "messageNormalPromptCode" : "import { Component } from '@angular\/core';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n    selector: 'nz-demo-message-info',\r\n    template: `\r\n        <button nz-button [nzType]=\"'primary'\" (click)=\"createBasicMessage()\">Display normal message<\/button>\r\n    `\r\n})\r\nexport class NzDemoMessageInfoComponent {\r\n\r\n    constructor(private message: NzMessageService) {\r\n    }\r\n\r\n    createBasicMessage(): void {\r\n        this.message.info('This is a normal message');\r\n    }\r\n}\r\n",
    "messageTypesCode" : "import { Component } from '@angular\/core';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n    selector: 'nz-demo-message-other',\r\n    template: `\r\n        <button class=\"m-r-10\" nz-button (click)=\"createMessage('success')\">Success<\/button>\r\n        <button class=\"m-r-10\" nz-button (click)=\"createMessage('error')\">Error<\/button>\r\n        <button class=\"m-r-10\" nz-button (click)=\"createMessage('warning')\">Warning<\/button>\r\n    `\r\n})\r\nexport class NzDemoMessageOtherComponent {\r\n    createMessage(type: string): void {\r\n        this.message.create(type, `This is a message of ${type}`);\r\n    }\r\n\r\n    constructor(private message: NzMessageService) {\r\n    }\r\n}",
    "messageCustomizeDurationCode" : "import { Component } from '@angular\/core';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n    selector: 'nz-demo-message-duration',\r\n    template: `\r\n        <button nz-button [nzType]=\"'default'\" (click)=\"createBasicMessage()\">Customized display duration<\/button>\r\n    `\r\n})\r\nexport class NzDemoMessageDurationComponent {\r\n    createBasicMessage(): void {\r\n        this.message.success('This is a prompt message for success, and it will disappear in 10 seconds', { nzDuration: 10000 });\r\n    }\r\n\r\n    constructor(private message: NzMessageService) {\r\n    }\r\n}",
    "messageLoadingCode" : "import { Component } from '@angular\/core';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n    selector: 'nz-demo-message-loading',\r\n    template: `\r\n        <button nz-button [nzType]=\"'default'\" (click)=\"createBasicMessage()\">Display a loading indicator<\/button>\r\n    `\r\n})\r\nexport class NzDemoMessageLoadingComponent {\r\n\r\n    constructor(private message: NzMessageService) {\r\n    }\r\n\r\n    createBasicMessage(): void {\r\n        const id = this.message.loading('Action in progress..', { nzDuration: 0 }).messageId;\r\n        setTimeout(_ => {\r\n            this.message.remove(id);\r\n        }, 2500);\r\n    }\r\n}\r\n",
    "messageSequenceCode": "import { Component } from '@angular\/core';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\nimport { concatMap } from 'rxjs\/operators';\r\n\r\n@Component({\r\n    selector: 'nz-demo-message-close',\r\n    template: `\r\n        <button nz-button [nzType]=\"'default'\" (click)=\"startShowMessages()\">Display a sequence of messages<\/button>\r\n    `\r\n})\r\nexport class NzDemoMessageCloseComponent {\r\n    constructor(private message: NzMessageService) {}\r\n\r\n    startShowMessages(): void {\r\n        this.message\r\n        .loading('Action in progress', { nzDuration: 2500 })\r\n        .onClose!.pipe(\r\n            concatMap(() => this.message.success('Loading finished', { nzDuration: 2500 }).onClose!),\r\n            concatMap(() => this.message.info('Loading finished is finished', { nzDuration: 2500 }).onClose!)\r\n        )\r\n        .subscribe(() => {\r\n            console.log('All completed!');\r\n        });\r\n    }\r\n}",
    "messageAPICode": "export interface NzMessageDataFilled {\r\n  onClose: Subject<false>; \/\/ It would emit an event when the message is closed\r\n}"
}