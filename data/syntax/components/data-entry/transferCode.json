{
    "transferBasicCode" : "import { Component, OnInit } from '@angular\/core';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n    selector: 'nz-demo-transfer-basic',\r\n    template: `\r\n        <nz-transfer\r\n            [nzDataSource]=\"list\"\r\n            [nzTitles]=\"['Source', 'Target']\"\r\n            (nzSelectChange)=\"select($event)\"\r\n            (nzChange)=\"change($event)\">\r\n        <\/nz-transfer>\r\n    `\r\n})\r\nexport class NzDemoTransferBasicComponent implements OnInit {\r\n    \/\/ tslint:disable-next-line:no-any\r\n    list: any[] = [];\r\n\r\n    ngOnInit(): void {\r\n        for (let i = 0; i < 20; i++) {\r\n            this.list.push({\r\n                key     : i.toString(),\r\n                title   : `content${i + 1}`,\r\n                disabled: i % 3 < 1,\r\n            });\r\n        }\r\n\r\n        [ 2, 3 ].forEach(idx => this.list[ idx ].direction = 'right');\r\n    }\r\n\r\n    select(ret: {}): void {\r\n        console.log('nzSelectChange', ret);\r\n    }\r\n\r\n    change(ret: {}): void {\r\n        console.log('nzChange', ret);\r\n    }\r\n}",
    "transferSearchCode" : "import { Component, OnInit } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-transfer-search',\r\n    template: `\r\n        <nz-transfer\r\n            [nzDataSource]=\"list\"\r\n            nzShowSearch\r\n            [nzFilterOption]=\"filterOption\"\r\n            (nzSearchChange)=\"search($event)\"\r\n            (nzSelectChange)=\"select($event)\"\r\n            (nzChange)=\"change($event)\">\r\n        <\/nz-transfer>\r\n    `\r\n})\r\nexport class NzDemoTransferSearchComponent implements OnInit {\r\n    \/\/ tslint:disable-next-line:no-any\r\n    list: any[] = [];\r\n\r\n    ngOnInit(): void {\r\n        for (let i = 0; i < 20; i++) {\r\n            this.list.push({\r\n                key        : i.toString(),\r\n                title      : `content${i + 1}`,\r\n                description: `description of content${i + 1}`,\r\n                direction  : Math.random() * 2 > 1 ? 'right' : ''\r\n            });\r\n        }\r\n    }\r\n\r\n    \/\/ tslint:disable-next-line:no-any\r\n    filterOption(inputValue: string, item: any): boolean {\r\n        return item.description.indexOf(inputValue) > -1;\r\n    }\r\n\r\n    search(ret: {}): void {\r\n        console.log('nzSearchChange', ret);\r\n    }\r\n\r\n    select(ret: {}): void {\r\n        console.log('nzSelectChange', ret);\r\n    }\r\n\r\n    change(ret: {}): void {\r\n        console.log('nzChange', ret);\r\n    }\r\n}",
    "transferAdvancedCode" : "import { Component, OnInit } from '@angular\/core';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n    selector: 'nz-demo-transfer-advanced',\r\n    template: `\r\n        <nz-transfer\r\n            [nzDataSource]=\"list\"\r\n            nzShowSearch\r\n            [nzOperations]=\"['to right', 'to left']\"\r\n            [nzListStyle]=\"{'width.px': 300, 'height.px': 400}\"\r\n            [nzRender]=\"render\"\r\n            [nzFooter]=\"footer\"\r\n            (nzSelectChange)=\"select($event)\"\r\n            (nzChange)=\"change($event)\">\r\n            <ng-template #render let-item>\r\n                {{ item.title }}-{{ item.description }}\r\n            <\/ng-template>\r\n            <ng-template #footer let-direction>\r\n                <button nz-button (click)=\"reload(direction)\" [nzSize]=\"'small'\" class=\"float-right m-10\">reload<\/button>\r\n            <\/ng-template>\r\n        <\/nz-transfer>\r\n    `\r\n})\r\nexport class NzDemoTransferAdvancedComponent implements OnInit {\r\n    list = [];\r\n\r\n    ngOnInit(): void {\r\n        this.getData();\r\n    }\r\n\r\n    getData(): void {\r\n        const ret = [];\r\n        for (let i = 0; i < 20; i++) {\r\n            ret.push({\r\n                key        : i.toString(),\r\n                title      : `content ${i + 1}`,\r\n                description: `description of content${i + 1}`,\r\n                direction  : Math.random() * 2 > 1 ? 'right' : ''\r\n            });\r\n        }\r\n        this.list = ret;\r\n    }\r\n\r\n    reload(direction: string): void {\r\n        this.getData();\r\n        this.msg.success(`your clicked ${direction}!`);\r\n    }\r\n\r\n    select(ret: {}): void {\r\n        console.log('nzSelectChange', ret);\r\n    }\r\n\r\n    change(ret: {}): void {\r\n        console.log('nzChange', ret);\r\n    }\r\n\r\n    constructor(public msg: NzMessageService) {\r\n    }\r\n}",
    "transferCustomDatasourceCode" : "import { Component, OnInit } from '@angular\/core';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n    selector: 'nz-demo-transfer-custom-item',\r\n    template: `\r\n        <nz-transfer\r\n            [nzDataSource]=\"list\"\r\n            [nzListStyle]=\"{'width.px': 300, 'height.px': 300}\"\r\n            [nzRender]=\"render\"\r\n            (nzSelectChange)=\"select($event)\"\r\n            (nzChange)=\"change($event)\">\r\n            <ng-template #render let-item>\r\n            <i nz-icon nzType=\"{{item.icon}}\"><\/i> {{ item.title }}\r\n            <\/ng-template>\r\n        <\/nz-transfer>\r\n    `\r\n})\r\nexport class NzDemoTransferCustomItemComponent implements OnInit {\r\n    \/\/ tslint:disable-next-line:no-any\r\n    list: any[] = [];\r\n\r\n    ngOnInit(): void {\r\n        this.getData();\r\n    }\r\n\r\n    getData(): void {\r\n        const ret = [];\r\n        for (let i = 0; i < 20; i++) {\r\n            ret.push({\r\n                key        : i.toString(),\r\n                title      : `content ${i + 1}`,\r\n                description: `description of content ${i + 1}`,\r\n                direction  : Math.random() * 2 > 1 ? 'right' : '',\r\n                icon       : `frown-o`\r\n            });\r\n        }\r\n        this.list = ret;\r\n    }\r\n\r\n    select(ret: {}): void {\r\n        console.log('nzSelectChange', ret);\r\n    }\r\n\r\n    change(ret: {}): void {\r\n        console.log('nzChange', ret);\r\n    }\r\n\r\n    constructor(public msg: NzMessageService) {\r\n    }\r\n}",
    "transferCheckBeforeMoveCode" : "import { Component, OnInit } from '@angular\/core';\r\nimport { NzMessageService, TransferCanMove, TransferItem } from 'ng-zorro-antd';\r\nimport { of, Observable } from 'rxjs';\r\nimport { delay } from 'rxjs\/operators';\r\n\r\n@Component({\r\n    selector: 'nz-demo-transfer-can-move',\r\n    template: `\r\n        <nz-transfer\r\n            [nzDataSource]=\"list\"\r\n            [nzCanMove]=\"canMove\"\r\n            (nzSelectChange)=\"select($event)\"\r\n            (nzChange)=\"change($event)\">\r\n        <\/nz-transfer>\r\n    `\r\n})\r\nexport class NzDemoTransferCanMoveComponent implements OnInit {\r\n    list = [];\r\n\r\n    ngOnInit(): void {\r\n        for (let i = 0; i < 20; i++) {\r\n            this.list.push({\r\n                key     : i.toString(),\r\n                title   : `content${i + 1}`,\r\n                disabled: i % 3 < 1\r\n            });\r\n        }\r\n\r\n        [ 2, 3 ].forEach(idx => this.list[ idx ].direction = 'right');\r\n    }\r\n\r\n    canMove(arg: TransferCanMove): Observable<TransferItem[]> {\r\n        if (arg.direction === 'right' && arg.list.length > 0) { arg.list.splice(0, 1); }\r\n        \/\/ or\r\n        \/\/ if (arg.direction === 'right' && arg.list.length > 0) delete arg.list[0];\r\n        return of(arg.list).pipe(delay(1000));\r\n    }\r\n\r\n    select(ret: {}): void {\r\n        console.log('nzSelectChange', ret);\r\n    }\r\n\r\n    change(ret: {}): void {\r\n        console.log('nzChange', ret);\r\n    }\r\n}",
    "transferTableCode": "import { Component, OnInit } from '@angular\/core';\r\nimport { TransferItem } from 'ng-zorro-antd\/transfer';\r\n\r\n@Component({\r\n    selector: 'nz-demo-transfer-table-transfer',\r\n    template: `\r\n        <nz-transfer\r\n            [nzDataSource]=\"list\"\r\n            [nzDisabled]=\"disabled\"\r\n            [nzShowSearch]=\"showSearch\"\r\n            [nzShowSelectAll]=\"false\"\r\n            [nzRenderList]=\"[renderList, renderList]\"\r\n            (nzSelectChange)=\"select($event)\"\r\n            (nzChange)=\"change($event)\"\r\n            >\r\n            <ng-template\r\n                #renderList\r\n                let-items\r\n                let-direction=\"direction\"\r\n                let-stat=\"stat\"\r\n                let-disabled=\"disabled\"\r\n                let-onItemSelectAll=\"onItemSelectAll\"\r\n                let-onItemSelect=\"onItemSelect\"\r\n            >\r\n                <nz-table #t [nzData]=\"convertItems(items)\" nzSize=\"small\">\r\n                <thead>\r\n                    <tr>\r\n                        <th\r\n                            nzShowCheckbox\r\n                            [nzDisabled]=\"disabled\"\r\n                            [nzChecked]=\"stat.checkAll\"\r\n                            [nzIndeterminate]=\"stat.checkHalf\"\r\n                            (nzCheckedChange)=\"onItemSelectAll($event)\"\r\n                        ><\/th>\r\n                        <th>Name<\/th>\r\n                        <th *ngIf=\"direction === 'left'\">Tag<\/th>\r\n                        <th>Description<\/th>\r\n                    <\/tr>\r\n                <\/thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let data of t.data\" (click)=\"onItemSelect(data)\">\r\n                        <td\r\n                            nzShowCheckbox\r\n                            [nzChecked]=\"data.checked\"\r\n                            [nzDisabled]=\"disabled || data.disabled\"\r\n                            (nzCheckedChange)=\"onItemSelect(data)\"\r\n                        ><\/td>\r\n                        <td>{{ data.title }}<\/td>\r\n                        <td *ngIf=\"direction === 'left'\">\r\n                            <nz-tag>{{ data.tag }}<\/nz-tag>\r\n                        <\/td>\r\n                        <td>{{ data.description }}<\/td>\r\n                    <\/tr>\r\n                <\/tbody>\r\n                <\/nz-table>\r\n            <\/ng-template>\r\n        <\/nz-transfer>\r\n        <div style=\"margin-top: 8px;\">\r\n            <nz-switch [(ngModel)]=\"disabled\" nzCheckedChildren=\"disabled\" nzUnCheckedChildren=\"disabled\"><\/nz-switch>\r\n            <nz-switch [(ngModel)]=\"showSearch\" nzCheckedChildren=\"showSearch\" nzUnCheckedChildren=\"showSearch\"><\/nz-switch>\r\n        <\/div>\r\n    `\r\n})\r\nexport class NzDemoTransferTableTransferComponent implements OnInit {\r\n    \/\/ tslint:disable-next-line:no-any\r\n    list: any[] = [];\r\n    disabled = false;\r\n    showSearch = false;\r\n\r\n    ngOnInit(): void {\r\n        for (let i = 0; i < 20; i++) {\r\n            this.list.push({\r\n                key: i.toString(),\r\n                title: `content${i + 1}`,\r\n                description: `description of content${i + 1}`,\r\n                disabled: i % 4 === 0,\r\n                tag: ['cat', 'dog', 'bird'][i % 3]\r\n            });\r\n        }\r\n\r\n        [2, 3].forEach(idx => (this.list[idx].direction = 'right'));\r\n    }\r\n\r\n    convertItems(items: TransferItem[]): TransferItem[] {\r\n        return items.filter(i => !i.hide);\r\n    }\r\n\r\n    select(ret: {}): void {\r\n        console.log('nzSelectChange', ret);\r\n    }\r\n\r\n    change(ret: {}): void {\r\n        console.log('nzChange', ret);\r\n    }\r\n}",
    "transferTreeCode": "\/\/ tslint:disable: no-any\r\nimport { ChangeDetectionStrategy, Component, ViewChild } from '@angular\/core';\r\nimport { NzTreeNode } from 'ng-zorro-antd\/core';\r\nimport { TransferChange, TransferItem } from 'ng-zorro-antd\/transfer';\r\nimport { NzTreeComponent } from 'ng-zorro-antd\/tree';\r\n\r\n@Component({\r\n    selector: 'nz-demo-transfer-tree-transfer',\r\n    template: `\r\n        <nz-transfer\r\n                [nzDataSource]=\"list\"\r\n                [nzShowSelectAll]=\"false\"\r\n                [nzRenderList]=\"[leftRenderList, null]\"\r\n                (nzChange)=\"change($event)\"\r\n            >\r\n            <ng-template #leftRenderList let-items let-onItemSelectAll=\"onItemSelectAll\" let-onItemSelect=\"onItemSelect\">\r\n                <nz-tree #tree [nzData]=\"treeData\" nzExpandAll nzBlockNode>\r\n                    <ng-template #nzTreeTemplate let-node>\r\n                        <span\r\n                        class=\"ant-tree-checkbox\"\r\n                        [class.ant-tree-checkbox-disabled]=\"node.isDisabled\"\r\n                        [class.ant-tree-checkbox-checked]=\"node.isChecked\"\r\n                        (click)=\"checkBoxChange(node, onItemSelect)\"\r\n                        >\r\n                        <span class=\"ant-tree-checkbox-inner\"><\/span>\r\n                        <\/span>\r\n                        <span\r\n                        (click)=\"checkBoxChange(node, onItemSelect)\"\r\n                        class=\"ant-tree-node-content-wrapper ant-tree-node-content-wrapper-open\"\r\n                        >{{ node.title }}<\/span\r\n                        >\r\n                    <\/ng-template>\r\n                <\/nz-tree>\r\n            <\/ng-template>\r\n            <\/nz-transfer>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class NzDemoTransferTreeTransferComponent {\r\n    @ViewChild('tree', { static: true }) tree: NzTreeComponent;\r\n    list: any[] = [\r\n        { id: 1, parentid: 0, title: 'parent 1' },\r\n        { id: 2, parentid: 1, title: 'leaf 1-1', disabled: true, isLeaf: true },\r\n        { id: 3, parentid: 1, title: 'leaf 1-2', isLeaf: true }\r\n    ];\r\n    treeData = this.generateTree(this.list);\r\n    checkedNodeList: NzTreeNode[] = [];\r\n\r\n    private generateTree(arr: TransferItem[]): TransferItem[] {\r\n        const tree: TransferItem[] = [];\r\n        const mappedArr: any = {};\r\n        let arrElem: TransferItem;\r\n        let mappedElem: TransferItem;\r\n\r\n        for (let i = 0, len = arr.length; i < len; i++) {\r\n            arrElem = arr[i];\r\n            mappedArr[arrElem.id] = { ...arrElem };\r\n            mappedArr[arrElem.id].children = [];\r\n        }\r\n\r\n        for (const id in mappedArr) {\r\n            if (mappedArr.hasOwnProperty(id)) {\r\n                mappedElem = mappedArr[id];\r\n                if (mappedElem.parentid) {\r\n                    mappedArr[mappedElem.parentid].children.push(mappedElem);\r\n                } else {\r\n                    tree.push(mappedElem);\r\n                }\r\n            }\r\n        }\r\n        return tree;\r\n    }\r\n\r\n    checkBoxChange(node: NzTreeNode, onItemSelect: (item: TransferItem) => void): void {\r\n        if (node.isDisabled) {\r\n            return;\r\n        }\r\n        node.isChecked = !node.isChecked;\r\n        if (node.isChecked) {\r\n            this.checkedNodeList.push(node);\r\n        } else {\r\n            const idx = this.checkedNodeList.indexOf(node);\r\n            if (idx !== -1) {\r\n                this.checkedNodeList.splice(idx, 1);\r\n            }\r\n        }\r\n        const item = this.list.find(w => w.id === node.origin.id);\r\n        onItemSelect(item);\r\n    }\r\n\r\n    change(ret: TransferChange): void {\r\n        const isDisabled = ret.to === 'right';\r\n        this.checkedNodeList.forEach(node => {\r\n            node.isDisabled = isDisabled;\r\n            node.isChecked = isDisabled;\r\n        });\r\n    }\r\n}"
}