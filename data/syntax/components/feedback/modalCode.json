{
    "modalBasicCode" : "import { Component } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-modal-basic',\r\n    template: `\r\n        <button nz-button [nzType]=\"'primary'\" (click)=\"showModal()\"><span>Show Modal<\/span><\/button>\r\n        <nz-modal [(nzVisible)]=\"isVisible\" nzTitle=\"The first Modal\" (nzOnCancel)=\"handleCancel()\" (nzOnOk)=\"handleOk()\">\r\n            <p>Content one<\/p>\r\n            <p>Content two<\/p>\r\n            <p>Content three<\/p>\r\n        <\/nz-modal>\r\n    `,\r\n    styles: []\r\n})\r\nexport class NzDemoModalBasicComponent {\r\n    isVisible = false;\r\n\r\n    constructor() {}\r\n\r\n    showModal(): void {\r\n        this.isVisible = true;\r\n    }\r\n\r\n    handleOk(): void {\r\n        console.log('Button ok clicked!');\r\n        this.isVisible = false;\r\n    }\r\n\r\n    handleCancel(): void {\r\n        console.log('Button cancel clicked!');\r\n        this.isVisible = false;\r\n    }\r\n}",
    "modalAsynchronouslyCloseCode" : "import { Component } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-modal-async',\r\n    template: `\r\n        <button nz-button nzType=\"primary\" (click)=\"showModal()\">\r\n            <span>Show Modal<\/span>\r\n        <\/button>\r\n        <nz-modal [(nzVisible)]=\"isVisible\" nzTitle=\"Modal Title\" (nzOnCancel)=\"handleCancel()\" (nzOnOk)=\"handleOk()\" [nzOkLoading]=\"isOkLoading\">\r\n            <p>Modal Content<\/p>\r\n        <\/nz-modal>\r\n    `\r\n})\r\nexport class NzDemoModalAsyncComponent {\r\n    isVisible = false;\r\n    isOkLoading = false;\r\n\r\n    showModal(): void {\r\n        this.isVisible = true;\r\n    }\r\n\r\n    handleOk(): void {\r\n        this.isOkLoading = true;\r\n        window.setTimeout(() => {\r\n            this.isVisible = false;\r\n            this.isOkLoading = false;\r\n        }, 3000);\r\n    }\r\n\r\n    handleCancel(): void {\r\n        this.isVisible = false;\r\n    }\r\n}",
    "modalCustomizedFooterCode" : "import { Component } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-modal-footer',\r\n    template: `\r\n        <button nz-button nzType=\"primary\" (click)=\"showModal()\">\r\n            <span>Show Modal<\/span>\r\n        <\/button>\r\n        <nz-modal [(nzVisible)]=\"isVisible\" [nzTitle]=\"modalTitle\" [nzContent]=\"modalContent\" [nzFooter]=\"modalFooter\" (nzOnCancel)=\"handleCancel()\">\r\n            <ng-template #modalTitle>\r\n                Custom Modal Title\r\n            <\/ng-template>\r\n\r\n            <ng-template #modalContent>\r\n                <p>Modal Content<\/p>\r\n                <p>Modal Content<\/p>\r\n                <p>Modal Content<\/p>\r\n                <p>Modal Content<\/p>\r\n                <p>Modal Content<\/p>\r\n            <\/ng-template>\r\n\r\n            <ng-template #modalFooter>\r\n                <span>Modal Footer: <\/span>\r\n                <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Custom Callback<\/button>\r\n                <button nz-button nzType=\"primary\" (click)=\"handleOk()\" [nzLoading]=\"isConfirmLoading\">Custom Submit<\/button>\r\n            <\/ng-template>\r\n        <\/nz-modal>\r\n    `\r\n    })\r\nexport class NzDemoModalFooterComponent {\r\n    isVisible = false;\r\n    isConfirmLoading = false;\r\n\r\n    constructor() { }\r\n\r\n    showModal(): void {\r\n        this.isVisible = true;\r\n    }\r\n\r\n    handleOk(): void {\r\n        this.isConfirmLoading = true;\r\n        setTimeout(() => {\r\n            this.isVisible = false;\r\n            this.isConfirmLoading = false;\r\n        }, 3000);\r\n    }\r\n\r\n    handleCancel(): void {\r\n        this.isVisible = false;\r\n    }\r\n}",
    "modalConfirmationModalDialogCode" : "import { Component } from '@angular\/core';\r\nimport { NzModalService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n    selector: 'nz-demo-modal-confirm',\r\n    template: `\r\n        <button class=\"m-r-10\" nz-button nzType=\"info\" (click)=\"showConfirm()\">Confirm<\/button>\r\n        <button nz-button nzType=\"dashed\" (click)=\"showDeleteConfirm()\">Delete<\/button>\r\n    `\r\n})\r\nexport class NzDemoModalConfirmComponent {\r\n    constructor(private modalService: NzModalService) {\r\n    }\r\n\r\n    showConfirm(): void {\r\n        this.modalService.confirm({\r\n            nzTitle  : '<i>Do you Want to delete these items?<\/i>',\r\n            nzContent: '<b>Some descriptions<\/b>',\r\n            nzOnOk   : () => console.log('OK')\r\n        });\r\n    }\r\n\r\n    showDeleteConfirm(): void {\r\n        this.modalService.confirm({\r\n            nzTitle     : 'Are you sure delete this task?',\r\n            nzContent   : '<b style=\"color: red;\">Some descriptions<\/b>',\r\n            nzOkText    : 'Yes',\r\n            nzOkType    : 'danger',\r\n            nzOnOk      : () => console.log('OK'),\r\n            nzCancelText: 'No',\r\n            nzOnCancel  : () => console.log('Cancel')\r\n        });\r\n    }\r\n}",
    "modalConfirmationModalDialog2Code" : "import { Component } from '@angular\/core';\r\nimport { NzModalRef, NzModalService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n    selector: 'nz-demo-modal-confirm-promise',\r\n    template: `\r\n        <button nz-button nzType=\"info\" (click)=\"showConfirm()\">Confirm<\/button>\r\n    `,\r\n    styles  : []\r\n})\r\nexport class NzDemoModalConfirmPromiseComponent {\r\n    confirmModal: NzModalRef;\r\n\r\n    constructor(private modalService: NzModalService) { }\r\n\r\n    showConfirm(): void {\r\n        this.confirmModal = this.modalService.confirm({\r\n            nzTitle: 'Do you Want to delete these items?',\r\n            nzContent: 'When clicked the OK button, this dialog will be closed after 1 second',\r\n            nzOnOk: () => new Promise((resolve, reject) => {\r\n                setTimeout(Math.random() > 0.5 ? resolve : reject, 1000);\r\n            }).catch(() => console.log('Oops errors!'))\r\n        });\r\n    }\r\n}\r\n",
    "modalInformationModalDialogCode" : "import { Component } from '@angular\/core';\r\nimport { NzModalService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n    selector: 'nz-demo-modal-info',\r\n    template: `\r\n        <button nz-button (click)=\"info()\">Info<\/button>\r\n        <button nz-button (click)=\"success()\">Success<\/button>\r\n        <button nz-button (click)=\"error()\">Error<\/button>\r\n        <button nz-button (click)=\"warning()\">Warning<\/button>\r\n    `,\r\n    styles  : [\r\n        `button {\r\n        margin-right: 8px;\r\n        }`\r\n    ]\r\n})\r\nexport class NzDemoModalInfoComponent {\r\n    constructor(private modalService: NzModalService) { }\r\n\r\n    info(): void {\r\n        this.modalService.info({\r\n            nzTitle: 'This is a notification message',\r\n            nzContent: '<p>some messages...some messages...<\/p><p>some messages...some messages...<\/p>',\r\n            nzOnOk: () => console.log('Info OK')\r\n        });\r\n    }\r\n\r\n    success(): void {\r\n        this.modalService.success({\r\n            nzTitle: 'This is a success message',\r\n            nzContent: 'some messages...some messages...'\r\n        });\r\n    }\r\n\r\n    error(): void {\r\n        this.modalService.error({\r\n            nzTitle: 'This is an error message',\r\n            nzContent: 'some messages...some messages...'\r\n        });\r\n    }\r\n\r\n    warning(): void {\r\n        this.modalService.warning({\r\n            nzTitle: 'This is an warning message',\r\n            nzContent: 'some messages...some messages...'\r\n        });\r\n    }\r\n}",
    "modalInternationalizationCode" : "import { Component } from '@angular\/core';\r\nimport { NzModalService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n    selector: 'nz-demo-modal-locale',\r\n    template: `\r\n        <div>\r\n            <button nz-button nzType=\"primary\" (click)=\"showModal()\">Modal<\/button>\r\n            <nz-modal\r\n                [(nzVisible)]=\"isVisible\"\r\n                nzTitle=\"Modal\"\r\n                nzOkText=\"Ok\"\r\n                nzCancelText=\"Cancel\"\r\n                (nzOnOk)=\"handleOk()\"\r\n                (nzOnCancel)=\"handleCancel()\"\r\n            >\r\n                <p>Bla bla ...<\/p>\r\n                <p>Bla bla ...<\/p>\r\n                <p>Bla bla ...<\/p>\r\n            <\/nz-modal>\r\n        <\/div>\r\n        <br\/>\r\n        <button nz-button nzType=\"info\" (click)=\"showConfirm()\">Confirm<\/button>\r\n    `\r\n})\r\nexport class NzDemoModalLocaleComponent {\r\n    isVisible = false;\r\n\r\n    constructor(private modalService: NzModalService) { }\r\n\r\n    showModal(): void {\r\n        this.isVisible = true;\r\n    }\r\n\r\n    handleOk(): void {\r\n        this.isVisible = false;\r\n    }\r\n\r\n    handleCancel(): void {\r\n        this.isVisible = false;\r\n    }\r\n\r\n    showConfirm(): void {\r\n        this.modalService.confirm({\r\n            nzTitle: 'Confirm',\r\n            nzContent: 'Bla bla ...',\r\n            nzOkText: 'OK',\r\n            nzCancelText: 'Cancel'\r\n        });\r\n    }\r\n}",
    "modalManualToDestroyCode" : "import { Component } from '@angular\/core';\r\nimport { NzModalService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n    selector: 'nz-demo-modal-manual',\r\n    template: `\r\n        <button nz-button (click)=\"success()\">Success<\/button>\r\n    `\r\n})\r\nexport class NzDemoModalManualComponent {\r\n    constructor(private modalService: NzModalService) { }\r\n\r\n    success(): void {\r\n        const modal = this.modalService.success({\r\n            nzTitle: 'This is a notification message',\r\n            nzContent: 'This modal will be destroyed after 1 second'\r\n        });\r\n\r\n        window.setTimeout(() => modal.destroy(), 1000);\r\n    }\r\n}",
    "modalCustomizePositionCode" : "import { Component } from '@angular\/core';\r\n\r\n@Component({\r\n    selector: 'nz-demo-modal-position',\r\n    template: `\r\n        <button nz-button nzType=\"primary\" (click)=\"showModalTop()\">Display a modal dialog at 20px to Top<\/button>\r\n        <nz-modal [nzStyle]=\"{ top: '20px' }\" [(nzVisible)]=\"isVisibleTop\" nzTitle=\"20px to Top\" (nzOnCancel)=\"handleCancelTop()\" (nzOnOk)=\"handleOkTop()\">\r\n            <p>some contents...<\/p>\r\n            <p>some contents...<\/p>\r\n            <p>some contents...<\/p>\r\n        <\/nz-modal>\r\n\r\n        <br\/><br\/>\r\n\r\n        <button nz-button nzType=\"primary\" (click)=\"showModalMiddle()\">Vertically centered modal dialog<\/button>\r\n        <nz-modal nzWrapClassName=\"vertical-center-modal\" [(nzVisible)]=\"isVisibleMiddle\" nzTitle=\"Vertically centered modal dialog\" (nzOnCancel)=\"handleCancelMiddle()\" (nzOnOk)=\"handleOkMiddle()\">\r\n            <p>some contents...<\/p>\r\n            <p>some contents...<\/p>\r\n            <p>some contents...<\/p>\r\n        <\/nz-modal>\r\n    `\r\n})\r\nexport class NzDemoModalPositionComponent {\r\n    isVisibleTop = false;\r\n    isVisibleMiddle = false;\r\n\r\n    showModalTop(): void {\r\n        this.isVisibleTop = true;\r\n    }\r\n\r\n    showModalMiddle(): void {\r\n        this.isVisibleMiddle = true;\r\n    }\r\n\r\n    handleOkTop(): void {\r\n        console.log('clicked ok');\r\n        this.isVisibleTop = false;\r\n    }\r\n\r\n    handleCancelTop(): void {\r\n        this.isVisibleTop = false;\r\n    }\r\n\r\n    handleOkMiddle(): void {\r\n        console.log('clicked ok');\r\n        this.isVisibleMiddle = false;\r\n    }\r\n\r\n    handleCancelMiddle(): void {\r\n        this.isVisibleMiddle = false;\r\n    }\r\n}",
    "modalServiceCode" : "\/* entryComponents: NzModalCustomComponent *\/\r\n\r\nimport { Component, Input, TemplateRef } from '@angular\/core';\r\nimport { NzModalRef, NzModalService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n    selector: 'nz-demo-modal-service',\r\n    template: `\r\n        <button nz-button nzType=\"primary\" (click)=\"createModal()\">\r\n            <span>String<\/span>\r\n        <\/button>\r\n\r\n        <button nz-button nzType=\"primary\" (click)=\"createTplModal(tplTitle, tplContent, tplFooter)\">\r\n            <span>Template<\/span>\r\n        <\/button>\r\n        <ng-template #tplTitle>\r\n            <span>Title Template<\/span>\r\n        <\/ng-template>\r\n        <ng-template #tplContent>\r\n            <p>some contents...<\/p>\r\n            <p>some contents...<\/p>\r\n            <p>some contents...<\/p>\r\n            <p>some contents...<\/p>\r\n            <p>some contents...<\/p>\r\n        <\/ng-template>\r\n        <ng-template #tplFooter>\r\n            <button nz-button nzType=\"primary\" (click)=\"destroyTplModal()\" [nzLoading]=\"tplModalButtonLoading\">Close after submit<\/button>\r\n        <\/ng-template>\r\n        <br \/><br \/>\r\n        <button nz-button nzType=\"primary\" (click)=\"createComponentModal()\">\r\n            <span>Use Component<\/span>\r\n        <\/button>\r\n        <button nz-button nzType=\"primary\" (click)=\"createCustomButtonModal()\">Custom Button<\/button>\r\n        <br \/><br \/>\r\n        <button nz-button nzType=\"primary\" (click)=\"openAndCloseAll()\">Open more modals then close all after 2s<\/button>\r\n        <nz-modal [(nzVisible)]=\"htmlModalVisible\" nzMask=\"false\" nzZIndex=\"1001\" nzTitle=\"Non-service html modal\">This is a non-service html modal<\/nz-modal>\r\n    `\r\n})\r\n    export class NzDemoModalServiceComponent {\r\n    tplModal: NzModalRef;\r\n    tplModalButtonLoading = false;\r\n    htmlModalVisible = false;\r\n\r\n    constructor(private modalService: NzModalService) { }\r\n\r\n    createModal(): void {\r\n        this.modalService.create({\r\n            nzTitle: 'Modal Title',\r\n            nzContent: 'string, will close after 1 sec',\r\n            nzClosable: false,\r\n            nzOnOk: () => new Promise((resolve) => window.setTimeout(resolve, 1000))\r\n        });\r\n    }\r\n\r\n    createTplModal(tplTitle: TemplateRef<{}>, tplContent: TemplateRef<{}>, tplFooter: TemplateRef<{}>): void {\r\n        this.tplModal = this.modalService.create({\r\n            nzTitle: tplTitle,\r\n            nzContent: tplContent,\r\n            nzFooter: tplFooter,\r\n            nzMaskClosable: false,\r\n            nzClosable: false,\r\n            nzOnOk: () => console.log('Click ok')\r\n        });\r\n    }\r\n\r\n    destroyTplModal(): void {\r\n        this.tplModalButtonLoading = true;\r\n        window.setTimeout(() => {\r\n            this.tplModalButtonLoading = false;\r\n            this.tplModal.destroy();\r\n        }, 1000);\r\n    }\r\n\r\n    createComponentModal(): void {\r\n        const modal = this.modalService.create({\r\n            nzTitle: 'Modal Title',\r\n            nzContent: NzModalCustomComponent,\r\n            nzComponentParams: {\r\n                title: 'title in component',\r\n                subtitle: 'component sub title\uFF0Cwill be changed after 2 sec'\r\n            },\r\n            nzFooter: [{\r\n                label: 'change component tilte from outside',\r\n                onClick: (componentInstance) => {\r\n                    componentInstance.title = 'title in inner component is changed';\r\n                }\r\n            }]\r\n        });\r\n\r\n        modal.afterOpen.subscribe(() => console.log('[afterOpen] emitted!'));\r\n\r\n        \/\/ Return a result when closed\r\n        modal.afterClose.subscribe((result) => console.log('[afterClose] The result is:', result));\r\n\r\n        \/\/ delay until modal instance created\r\n        window.setTimeout(() => {\r\n            const instance = modal.getContentComponent();\r\n            instance.subtitle = 'sub title is changed';\r\n        }, 2000);\r\n    }\r\n\r\n    createCustomButtonModal(): void {\r\n        const modal = this.modalService.create({\r\n            nzTitle: 'custom button demo',\r\n            nzContent: 'pass array of button config to nzFooter to create multiple buttons',\r\n            nzFooter: [\r\n                {\r\n                    label: 'Close',\r\n                    shape: 'default',\r\n                    onClick: () => modal.destroy()\r\n                },\r\n                {\r\n                    label: 'Confirm',\r\n                    type: 'primary',\r\n                    onClick: () => this.modalService.confirm({ nzTitle: 'Confirm Modal Title', nzContent: 'Confirm Modal Content' })\r\n                },\r\n                {\r\n                    label: 'Change Button Status',\r\n                    type: 'danger',\r\n                    loading: false,\r\n                    onClick(): void {\r\n                        this.loading = true;\r\n                        window.setTimeout(() => this.loading = false, 1000);\r\n                        window.setTimeout(() => {\r\n                        this.loading = false;\r\n                        this.disabled = true;\r\n                        this.label = 'can not be clicked\uFF01';\r\n                        }, 2000);\r\n                    }\r\n                },\r\n                {\r\n                    label: 'async load',\r\n                    type: 'dashed',\r\n                    onClick: () => new Promise(resolve => window.setTimeout(resolve, 2000))\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n    openAndCloseAll(): void {\r\n        let pos = 0;\r\n\r\n        [ 'create', 'info', 'success', 'error' ].forEach((method) => this.modalService[method]({\r\n            nzMask: false,\r\n            nzTitle: `Test ${method} title`,\r\n            nzContent: `Test content: <b>${method}<\/b>`,\r\n            nzStyle: { position: 'absolute', top: `${pos * 70}px`, left: `${(pos++) * 300}px` }\r\n        }));\r\n\r\n        this.htmlModalVisible = true;\r\n\r\n        this.modalService.afterAllClose.subscribe(() => console.log('afterAllClose emitted!'));\r\n\r\n        window.setTimeout(() => this.modalService.closeAll(), 2000);\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'nz-modal-custom-component',\r\n    template: `\r\n        <div>\r\n            <h2>{{ title }}<\/h2>\r\n            <h4>{{ subtitle }}<\/h4>\r\n            <p>\r\n                <span>Get Modal instance in component<\/span>\r\n                <button nz-button [nzType]=\"'primary'\" (click)=\"destroyModal()\">destroy modal in the component<\/button>\r\n            <\/p>\r\n        <\/div>\r\n    `\r\n })\r\nexport class NzModalCustomComponent {\r\n    @Input() title: string;\r\n    @Input() subtitle: string;\r\n\r\n    constructor(private modal: NzModalRef) { }\r\n\r\n    destroyModal(): void {\r\n        this.modal.destroy({ data: 'this the result data' });\r\n    }\r\n}",
    "modalAPICode": "constructor(modal: NzModalService) {\r\n    const ref: NzModalRef = modal.info();\r\n    ref.close(); \/\/ Or ref.destroy(); This dialog will be destroyed directly\r\n}",
    "modalAPICode2": "nzFooter: [{\r\n    label: string; \/\/ Button text\r\n    type?: string; \/\/ Types\r\n    shape?: string; \/\/ Shape\r\n    ghost?: boolean; \/\/ Whether ghost\r\n    size?: string; \/\/ Size\r\n    autoLoading?: boolean; \/\/ The default is true. If true, this button will automatically be set to the loading state when onClick returns a promise.\r\n  \r\n    \/\/ Tip: The `this` of below methods points to the configuration object itself. When nzContent is a component class, the contentComponentInstance parameter passed in by the method below is an instance of the component class\r\n    \/\/ Whether to show this button\r\n    show?: boolean | ((this: ModalButtonOptions, contentComponentInstance?: object) => boolean);\r\n    \/\/ Whether to display loading\r\n    loading?: boolean | ((this: ModalButtonOptions, contentComponentInstance?: object) => boolean);\r\n    \/\/ Is it disabled\r\n    disabled?: boolean | ((this: ModalButtonOptions, contentComponentInstance?: object) => boolean);\r\n    \/\/ Callback of clicking\r\n    onClick?(this: ModalButtonOptions, contentComponentInstance?: object): void | Promise&lt;void&gt; | any;\r\n}]",
    "modalAPICode3": "<div *nzModalFooter>\r\n  <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Custom Callback<\/button>\r\n  <button nz-button nzType=\"primary\" (click)=\"handleOk()\" [nzLoading]=\"isConfirmLoading\">Custom Submit<\/button>\r\n<\/div>\r\n\r\n<!-- or -->\r\n\r\n<ng-template [nzModalFooter]>\r\n  <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Custom Callback<\/button>\r\n  <button nz-button nzType=\"primary\" (click)=\"handleOk()\" [nzLoading]=\"isConfirmLoading\">Custom Submit<\/button>\r\n<\/ng-template>"
}  